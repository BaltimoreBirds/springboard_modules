<?php

/**
 * @file Springboard Social Pull module, used for aggregation of social media content based on hashtags.
 *
 * This module uses OAuth for fetching social media content and is meant to be data source-agnoastic.
 *
 * The fetch process can be initiated in one of three ways:
 * 1. Trigger manually on the settings page by an administrator.
 * 2. On Drupal Cron run if indicated on the settings page.
 * 3. By visiting a designated callback path.
 * 4. Via the "Execute Social Pull" action this module defines.
 *
 */

define('SBA_SOCIAL_PULL_SETTINGS_PATH', 'admin/config/services/advocacy/social-pull');
define('SBA_SOCIAL_PULL_OAUTH_CALLBACK', 'sba-social-pull/twitter');

/**
 * Implements hook_menu() for the settings page and the optional, fetch triggering callback.
 */
function sba_social_pull_menu() {
  $items[SBA_SOCIAL_PULL_SETTINGS_PATH] = array(
    'title' => 'Social Pull',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_sba_social_pull_admin_settings_form'),
    'access arguments' => array('access administrative pages'),
//    'access arguments' => array('access content'),
    'file' => 'sba_social_pull.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items[SBA_SOCIAL_PULL_OAUTH_CALLBACK] = array(
    'title' => 'SSP execution path',
    'page callback' => '_sba_social_pull_fetch_trigger_page',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Execute the next fetch.
 */
function _sba_social_pull_execute_fetch() {


  // Determine what should be fetched:
  //$fetch_data = _sba_social_pull_prepare_next_fetch_items(); 

  // Fetch each item

  return FALSE;
}

/**
 * Callback page for triggering the next fetch, if enabled on the settings page.
 *
 * Either a 1 or a 0 is output on the callback page to indicate success or failure.
 */
function _sba_social_pull_fetch_trigger_page() {
  // drupal_set_message('POST:<pre>' . print_r($_POST, 1) . '</pre>');
  // drupal_set_message('GET:<pre>' . print_r($_GET, 1) . '</pre>');

  /* if (isset($_GET['oauth_token']) && isset($_GET['oauth_verifier'])) {
    variable_set('sba_social_pull_oauth_token', $_GET['oauth_token']);
    variable_set('sba_social_pull_oauth_verifier', $_GET['oauth_verifier']);
    $access_token = $_GET['oauth_token'];
    $accsss_token_secret = $_GET['oauth_verifier'];
  } */
  $twitter_consumer_key = variable_get('twitter_consumer_key', '');
  $twitter_consumer_secret = variable_get('twitter_consumer_secret', '');

  // $oauth_token = variable_get('sba_social_pull_oauth_token', 'N/A');
  // $oauth_verifier = variable_get('sba_social_pull_oauth_verifier', 'N/A');
  drupal_set_message('twitter_consumer_key = "' . $twitter_consumer_key . '"');
  drupal_set_message('twitter_consumer_secret = "' . $twitter_consumer_secret . '"');

  
  $oauth_token = '3903483738-pjSE9qxw64jGMxiXoJ7JGjyubNChvfC1cyrRxm8';
  $oauth_token_secret = 'u5UEAyytzOXhxgvotrxeMuLpO9JNcMjkRM9kOivYZpeXC';

  // Actual fetch code:
  module_load_include('php', 'oauth_common', 'lib/OAuth');
  
  $consumer = new OAuthConsumer($twitter_consumer_key, $twitter_consumer_secret);
  $token = new OAuthConsumer($oauth_token, $oauth_token_secret);
  $signature_method = new OAuthSignatureMethod_HMAC_SHA1(); 
  $url = 'https://api.twitter.com/1.1/statuses/user_timeline.json';
  $params = array(
    'since_id' => '662280704592621568',
    'user_id' => '3903483738',
  );
  $method = 'GET';
  $request = OAuthRequest::from_consumer_and_token($consumer, $token, $method, $url, $params);  
  $request->sign_request($signature_method, $consumer, $token);
  $url = $request->to_url();
  $data = '';
  if (count($params) > 0) {
    if ($method == 'GET') {
      $url .= '?'. http_build_query($params, '', '&');
    }
    else {
      $data = http_build_query($params, '', '&');
    }
  }
  $headers = array();
  $headers['Authorization'] = 'Oauth';
  $headers['Content-type'] = 'application/x-www-form-urlencoded';  
  //drupal_set_message('My URL "' . $url . '"');
  //drupal_set_message('My headers <pre>' . print_r($headers, 1) . '</pre>');
  //drupal_set_message('My method "' . $method . '"');
  //drupal_set_message('My data <pre>' . print_r($data, 1) .  '</pre>');
  $response = drupal_http_request($url, array('headers' => $headers, 'method' => $method, 'data' => $data));
  drupal_set_message('Response:<pre>' . print_r($response, 1) . '</pre>');

  // echo _sba_social_pull_execute_fetch() ? 1 : 0;
  return '.';
}

/* Helper functions: */

/**
 * Build a list mapping each hashtag to its data source, ordered
 * to maximize the chance new content is available.
 */ 
function _sba_social_pull_prepare_next_fetch_items() {
  $fetch_data = array();

  return $fetch_data;
}

/**
 * Redirect to twitter authentication after a webform submission.
 */
function sba_social_pull_twitter_redirect() {
  // Don't do anything else if the credentials haven't been set up yet.
  $key = variable_get('twitter_consumer_key', '');
  $secret = variable_get('twitter_consumer_secret', '');
  drupal_set_message('key: "' . $key . '"');
  drupal_set_message('secret: "' . $secret . '"');
  if (empty($key) || empty($secret)) {
    return;
  }
  module_load_include('inc', 'twitter');
  $twitter = new Twitter($key, $secret);
  //$oauth_callback = variable_get('twitter_oauth_callback_url', TWITTER_OAUTH_CALLBACK_URL);
  $callback_url = url(SBA_SOCIAL_PULL_OAUTH_CALLBACK, array('absolute' => TRUE));
  drupal_set_message('oauth_callback url: "' . $callback_url . '"');
  $params = array('oauth_callback' => $callback_url);
  $token = $twitter->get_request_token($params);
  $_SESSION['twitter_oauth']['token'] = $token;

  // Let twitter.module know we are using authenticate rather than the authorize endpoint.
  $_SESSION['twitter_oauth']['signin'] = TRUE;
  //$token = array('3903483738-pjSE9qxw64jGMxiXoJ7JGjyubNChvfC1cyrRxm8');
  drupal_set_message('Token: "' . print_r($token, 1) . '"');
  drupal_goto($twitter->get_authenticate_url($token));
}

/**
 * Form submit for the OAuth callback.
 *
 * twitter_oauth_callback_form_validate() in twitter.pages.inc does the heavy lifting.
 * The submit hook in twitter.pages.inc was unset in the form alter above,
 * because it assumes that there is twitter account integration with drupal.
 */
function sba_social_pull_oauth_callback_submit(&$form, &$form_state) {

  // Programmed = FALSE because this form is submitted in code and otherwise
  // the redirection would not work.
  $form_state['programmed'] = FALSE;
  $form_state['redirect'] = array(
    'node/' . $_SESSION['action_sid']['nid'] . '/social-message-preview',
    array('query' => array('sid' => $_SESSION['action_sid']['sid']))
  );

  $response = $form_state['twitter_oauth']['response'];
  // $_SESSION['twitter']['values'] is what you'd have if using
  // twitter_signin.module, but we are doing "session only" mock sign-ins.
  $_SESSION['twitter']['values'] = $response;
}
