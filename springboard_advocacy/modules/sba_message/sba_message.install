<?php

/**
 * @file
 * Sets up the base table for our entity and a table to store information about
 * the entity types.
 */

/**
 * Implements hook_install().
 */
function sba_message_install() {


  entity_save('sba_message',
    entity_create('sba_message_type', 
      array(
        'label'=> 'SBA Letter to Target Message',
        'type' => 'sba_letter_to_target_message')
      )
    );

  $field_bases = array();

  // Exported field_base: 'field_message_editable'
  $field_bases['field_message_editable'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_message_editable',
    'foreign keys' => array(),
    'indexes' => array(
      'value' => array(
        0 => 'value',
      ),
    ),
    'locked' => 0,
    'module' => 'list',
    'settings' => array(
      'allowed_values' => array(
        'Editable' => 'Editable',
        'Not editable' => 'Not editable',
        'Editing is required' => 'Editing is required',
      ),
      'allowed_values_function' => '',
    ),
    'translatable' => 0,
    'type' => 'list_text',
  );

  // Exported field_base: 'field_sba_alert_id'
  $field_bases['field_sba_alert_id'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_sba_alert_id',
    'foreign keys' => array(),
    'indexes' => array(
      'target_id' => array(
        0 => 'target_id',
      ),
    ),
    'locked' => 0,
    'module' => 'entityreference',
    'settings' => array(
      'handler' => 'base',
      'handler_settings' => array(
        'behaviors' => array(
          'views-select-list' => array(
            'status' => 0,
          ),
        ),
        'sort' => array(
          'type' => 'none',
        ),
        'target_bundles' => array(
          'springboard_letter' => 'springboard_letter',
        ),
      ),
      'target_type' => 'node',
    ),
    'translatable' => 0,
    'type' => 'entityreference',
  );

  // Exported field_base: 'field_sba_greeting'
  $field_bases['field_sba_greeting'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_sba_greeting',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(
      'max_length' => 255,
    ),
    'translatable' => 0,
    'type' => 'text',
  );

  // Exported field_base: 'field_sba_message'
  $field_bases['field_sba_message'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_sba_message',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(),
    'translatable' => 0,
    'type' => 'text_long',
  );

  // Exported field_base: 'field_sba_placeholder_greeting'
  $field_bases['field_sba_placeholder_greeting'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_sba_placeholder_greeting',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(
      'max_length' => 255,
    ),
    'translatable' => 0,
    'type' => 'text',
  );

  // Exported field_base: 'field_sba_salutation'
  $field_bases['field_sba_salutation'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_sba_salutation',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(),
    'translatable' => 0,
    'type' => 'text_long',
  );

  // Exported field_base: 'field_sba_subject'
  $field_bases['field_sba_subject'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_sba_subject',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(
      'max_length' => 255,
    ),
    'translatable' => 0,
    'type' => 'text',
  );

  // Exported field_base: 'field_subject_editable'
  $field_bases['field_subject_editable'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_subject_editable',
    'foreign keys' => array(),
    'indexes' => array(
      'value' => array(
        0 => 'value',
      ),
    ),
    'locked' => 0,
    'module' => 'list',
    'settings' => array(
      'allowed_values' => array(
        'Not editable' => 'Not editable',
        'Editable' => 'Editable',
        'Editing is required' => 'Editing is required',
      ),
      'allowed_values_function' => '',
    ),
    'translatable' => 0,
    'type' => 'list_text',
  );

  foreach ($field_bases as $field) {
    field_create_field($field);
  }

  $field_instances = array();

  // Exported field_instance: 'sba_message-sba_letter_to_target_message-field_message_editable'
  $field_instances['sba_message-sba_letter_to_target_message-field_message_editable'] = array(
    'bundle' => 'sba_letter_to_target_message',
    'default_value' => array(
      0 => array(
        'value' => 'Editable',
      ),
    ),
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'list',
        'settings' => array(),
        'type' => 'list_default',
        'weight' => 8,
      ),
    ),
    'entity_type' => 'sba_message',
    'field_name' => 'field_message_editable',
    'label' => 'Message editable by action taker?',
    'required' => 1,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_buttons',
      'weight' => 4,
    ),
  );

  // Exported field_instance: 'sba_message-sba_letter_to_target_message-field_sba_alert_id'
  $field_instances['sba_message-sba_letter_to_target_message-field_sba_alert_id'] = array(
    'bundle' => 'sba_letter_to_target_message',
    'default_value' => NULL,
    'default_value_function' => 'entityreference_prepopulate_field_default_value',
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 2,
      ),
    ),
    'entity_type' => 'sba_message',
    'field_name' => 'field_sba_alert_id',
    'label' => 'Alert ID',
    'required' => 0,
    'settings' => array(
      'behaviors' => array(
        'prepopulate' => array(
          'action' => 'hide',
          'action_on_edit' => 1,
          'fallback' => 'form_error',
          'providers' => array(
            'node_url' => 1,
            'og_context' => FALSE,
            'url' => 0,
          ),
          'skip_perm' => 0,
          'status' => 1,
        ),
      ),
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'match_operator' => 'CONTAINS',
        'path' => '',
        'size' => 60,
      ),
      'type' => 'entityreference_autocomplete',
      'weight' => 7,
    ),
  );

  // Exported field_instance: 'sba_message-sba_letter_to_target_message-field_sba_greeting'
  $field_instances['sba_message-sba_letter_to_target_message-field_sba_greeting'] = array(
    'bundle' => 'sba_letter_to_target_message',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 5,
      ),
    ),
    'entity_type' => 'sba_message',
    'field_name' => 'field_sba_greeting',
    'label' => 'Greeting',
    'required' => 0,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'size' => 60,
      ),
      'type' => 'text_textfield',
      'weight' => 3,
    ),
  );

  // Exported field_instance: 'sba_message-sba_letter_to_target_message-field_sba_message'
  $field_instances['sba_message-sba_letter_to_target_message-field_sba_message'] = array(
    'bundle' => 'sba_letter_to_target_message',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 1,
      ),
    ),
    'entity_type' => 'sba_message',
    'field_name' => 'field_sba_message',
    'label' => 'Message',
    'required' => 0,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'rows' => 5,
      ),
      'type' => 'text_textarea',
      'weight' => 5,
    ),
  );

  // Exported field_instance: 'sba_message-sba_letter_to_target_message-field_sba_placeholder_greeting'
  $field_instances['sba_message-sba_letter_to_target_message-field_sba_placeholder_greeting'] = array(
    'bundle' => 'sba_letter_to_target_message',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 4,
      ),
    ),
    'entity_type' => 'sba_message',
    'field_name' => 'field_sba_placeholder_greeting',
    'label' => 'Placeholder Greeting',
    'required' => 0,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'size' => 60,
      ),
      'type' => 'text_textfield',
      'weight' => 2,
    ),
  );

  // Exported field_instance: 'sba_message-sba_letter_to_target_message-field_sba_salutation'
  $field_instances['sba_message-sba_letter_to_target_message-field_sba_salutation'] = array(
    'bundle' => 'sba_letter_to_target_message',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 6,
      ),
    ),
    'entity_type' => 'sba_message',
    'field_name' => 'field_sba_salutation',
    'label' => 'Salutation',
    'required' => 0,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'rows' => 5,
      ),
      'type' => 'text_textarea',
      'weight' => 6,
    ),
  );

  // Exported field_instance: 'sba_message-sba_letter_to_target_message-field_sba_subject'
  $field_instances['sba_message-sba_letter_to_target_message-field_sba_subject'] = array(
    'bundle' => 'sba_letter_to_target_message',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'sba_message',
    'field_name' => 'field_sba_subject',
    'label' => 'Subject',
    'required' => 0,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'size' => 60,
      ),
      'type' => 'text_textfield',
      'weight' => 1,
    ),
  );

  // Exported field_instance: 'sba_message-sba_letter_to_target_message-field_subject_editable'
  $field_instances['sba_message-sba_letter_to_target_message-field_subject_editable'] = array(
    'bundle' => 'sba_letter_to_target_message',
    'default_value' => array(
      0 => array(
        'value' => 'Not Editable',
      ),
    ),
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'list',
        'settings' => array(),
        'type' => 'list_default',
        'weight' => 7,
      ),
    ),
    'entity_type' => 'sba_message',
    'field_name' => 'field_subject_editable',
    'label' => 'Subject editable by action taker?',
    'required' => 1,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_buttons',
      'weight' => 0,
    ),
  );

  // Translatables
  // Included for use with string extractors like potx.
  t('Alert ID');
  t('Editable by action taker?');
  t('Greeting');
  t('Message');
  t('Placeholder Greeting');
  t('Salutation');
  t('Subject');

  foreach ($field_instances as $instance) {
    field_create_instance($instance);
  }

  variable_set('sba_message_node_types', array('springboard_letter' => 'sba_letter_to_target_message'));

}
/**
 * Implements hook_schema().
 */
function sba_message_schema() {
  $schema = array();

  $schema['sba_message'] = array(
    'description' => 'The base table for sba_message entities.',
    'fields' => array(
      'sba_message_id' => array(
        'description' => 'Primary Key: Identifier for a sba_message.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The {sba_message_type}.type of this sba_message.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'language' => array(
        'description' => 'The language of the sba_message.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => 'The name of the sba_message - a human-readable identifier.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the sba_message was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the sba_message was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data.',
      ),
    ),
    'primary key' => array('sba_message_id'),
    'indexes' => array(
      'type' => array('type'),
    ),
  );

  $schema['sba_message_type'] = array(
    'description' => 'Stores information about defined sba_message types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique sba_message type identifier.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this sba_message type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this sba_message type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The weight of this sba_message type in relation to others.',
      ),
      'data' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data related to this sba_message type.',
      ),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function sba_message_uninstall() {

  // Remove fields implemented by this module.
  _sba_message_delete_fields();

  field_purge_batch(1000);
}


/**
 * Delete springboard message fields
 */
function _sba_message_delete_fields() {
  $fields = array(
    'field_sba_salutation',
    'field_sba_alert_id',
    'field_sba_placeholder_greeting',
    'field_sba_greeting',
    'field_sba_message',
    'field_sba_subject',
  );
  foreach ($fields as $field_name) {
    //@todo do we need this?
//    $types = entity_load_multiple_by_name('sba_message_type', FALSE);
//    if($types) {
//      foreach ($types as $type => $info) {
//        $field = field_info_instance('sba_message', $field_name, $type);
//        field_delete_instance($field);
//      }
//    }
    // Just in case
    if($field = field_info_field($field_name)){
      field_delete_field($field_name);
    }
  }
  drupal_set_message('Sba Message fields deleted.');
}
