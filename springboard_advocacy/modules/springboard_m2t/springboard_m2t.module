<?php

function springboard_m2t_menu() {
  $items = array();

  $items['admin/config/springboard/advocacy/m2t'] = array(
    'title' => 'Message to Target',
    'description' => '',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('springboard_m2t_admin'),
    'page callback' => 'drupal_get_form',
    'file' => 'includes/springboard_m2t.admin.inc',
    'weight' => 10,
    'type' => MENU_LOCAL_TASK,

  );
  
  //ajax callback
  $items['smartylookup'] = array(
    'title' => 'Get district info from smarty streets',
    'description' => '',
    'type' => MENU_CALLBACK,
    'page callback' => '_springboard_mt2_smarty_lookup',
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Ajax callback for smarty streets api
 */
function _springboard_mt2_smarty_lookup() {
  
  //uncomment to test lookups via menu callback
  // $geo['zip'] = '12866';
  // $geo['plus4'] = '3300';
  // springboard_m2t_transaction_lookup($geo['zip'], $geo['plus4']);
  // return;

  $responses = array();

  $address = isset($_POST['address']) ? $_POST['address'] : NULL;
  if (empty($address)) {
    return drupal_json_output(array('error' => 'address not supplied'));
  }

  $query =  array(
    //'street' => '49 Hall Rd, Canaan, NH 03741',
    'street' => urlencode($address['submitted[sbp_address']),
    'city' => urlencode($address['submitted[sbp_city']),
    'state' => urlencode($address['submitted[sbp_state']),
    'zipcode' => urlencode($address['submitted[sbp_zip']),
    'auth-id' => variable_get('springboard_m2t_smarty_authid',''),
    'auth-token' => variable_get('springboard_m2t_smarty_authtoken',''),
  );

  $url = url('https://api.smartystreets.com/street-address', array('query' => $query));

  $response = drupal_http_request($url);

  if (!isset($response->status_message) || $response->status_message != 'OK') {
    return drupal_json_output(array('error' => 'Server returned invalid response'));
  }

  if (empty($response->data)) {

    $data = json_decode($response->data);

    if(!empty($data)) {
      $geo = array();
      $geo['zip'] = isset($data[0]->components->zipcode) ? $data[0]->components->zipcode : '';
      $geo['plus4'] = isset($data[0]->components->plus4_code) ? $data[0]->components->plus4_code : '';
      //$district = $data[0]->metadata->congressional_district;
      $geo['latitude'] = isset($data[0]->metadata->latitude) ? $data[0]->metadata->latitude : '';
      $geo['longitude'] = isset($data[0]->metadata->longitude) ? $data[0]->metadata->longitude : '';
      $_SESSION['m2t_geo'] = $geo;
      if(!empty($geo['zip']) && !empty($geo['plus4'])) {
        springboard_m2t_transaction_lookup($geo['zip'], $geo['plus4']);
      }
    }
  }
}

function springboard_m2t_transaction_lookup($zip, $plus4) {
  $client = springboard_m2t_load_client();
  $legislators = $client->getLegislators($zip  . '-' . $plus4);
  if (!empty($legislators)) {
    return drupal_json_output(array('response' => $legislators));
  }
  else {
    return FALSE;
  }
}

function springboard_m2t_load_client() {
  $lib = libraries_load('springboard_advocacy');
  $domain = variable_get('springboard_advocacy_server_url', '');
  $client = new SpringboardAdvocacyAPIClient($domain);
  $token = springboard_m2m_get_token($client);
  if (!empty($token->access_token)) {
    $client->setToken($token->access_token);
  }
  return $client;
}

function springboard_m2m_get_token($client) {
  $token = variable_get('springboard_advocacy_access_token', array());
  if (empty($token->access_token) || $token->created < (time() - ($token->expires_in - 100))) {
    $client_id = variable_get('springboard_advocacy_client_id', '');
    $client_secret = variable_get('springboard_advocacy_client_secret', '');
    $token = $client->getToken($client_id, $client_secret);
    if (!empty($token->access_token)) {
      $token->created = time();
      variable_set('springboard_advocacy_access_token', $token);
      return $token;
    }
  }
  return $token;
}





