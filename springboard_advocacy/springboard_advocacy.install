<?php

/**
 * @file
 * Springboard Advocacy installation functions.
 */

/**
 * Implements hook_requirements().
 */
function springboard_advocacy_requirements($phase) {
  $t = get_t();

  $requirements['springboard_advocacy'] = array(
    'title' => $t('Springboard advocacy'),
    'value' => 'Version 1',
  );

  drupal_load('module', 'libraries');
  $lib = libraries_detect('springboard_advocacy');

  if ($phase == 'runtime' && !empty($lib['installed'])) {
    $requirements['springboard_advocacy']['severity'] = REQUIREMENT_OK;
  } 
  elseif($phase == 'runtime') {
    $requirements['springboard_advocacy']['severity'] = REQUIREMENT_ERROR;
    $requirements['springboard_advocacy']['description'] = 'Springboard Advocacy library not installed';
  }

  return $requirements;
}


/**
 * Implements hook_schema().
 *
 * Table to save unique alert IDs
 */
function springboard_advocacy_schema() {

  // Store a unique ID for use with advocacy server
  $schema['springboard_advocacy_alert_id'] = array(
    'description' => 'Store messaging information.',
    'fields' => array(
      'nid' => array(
        'description' => 'messages node id',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'advocacy_id' => array(
        'description' => 'form unique ID',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('nid'),
  );
    return $schema;
}

 /**
  *  Add springboard_advocacy alert id table
  */
function springboard_advocacy_update_7001() {
  $schema = module_invoke('springboard_advocacy', 'schema');
  if(db_table_exists('springboard_advocacy_alert_id') == FALSE) {
    db_create_table('springboard_advocacy_alert_id', $schema['springboard_advocacy_alert_id']);
  }
}