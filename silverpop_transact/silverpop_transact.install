<?php
/**
 * @file
 * Installs Silverpop Transact module.
 *
 * @TODO remove variables at uninstall.
 */

/**
 * Implements hook_install().
 */
function silverpop_transact_install() {
  $directory = "private://failed-silverpop-data";
  file_prepare_directory($directory, FILE_CREATE_DIRECTORY);
}

/**
 * Implements hook_requirements().
 *
 * @TODO file_prepare_directory() does not seem to work.
 */
function silverpop_transact_requirements($phase) {
  $requirements = array();
  if ($phase == 'runtime') {
    $directory = "private://failed-silverpop-data";
    $directory_exists = file_prepare_directory($directory);
    if ($directory_exists) {
      $requirements['silverpop'] = array(
        'title' => t('Silverpop Transact directory'),
        'description' => t('The directory for storing failed Silverpop Transact transmission exists and is writable.'),
        'value' => t('Exists'),
        'severity' => REQUIREMENT_OK,
      );
    }
    else {
      $requirements['silverpop'] = array(
        'title' => t('Silverpop Transact directory'),
        'description' => t('The directory for storing failed Silverpop Transact transmission does not exist or is not writable.'),
        'value' => t('Does not exist'),
        'severity' => REQUIREMENT_WARNING,
      );
    }
  }
  return $requirements;
}

/**
 * Implements hook_schema().
 */
function silverpop_transact_schema() {
  // @TODO add appropriate indexes.
  $schema['silverpop_transact_log'] = array(
    'description' => 'Silver pop Transact log entries.',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier of a silverpop transaction log entry.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'model' => array(
        'description' => 'XML or SMTP',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'origin' => array(
        'description' => 'Module or Rule',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the email record was created.',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'status' => array(
        'description' => 'Boolean indicating success/failure. Only applicable with XML mode messages.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 1,
      ),
      'silverpop_message' => array(
        'description' => 'Success/Failure message as sent by Silverpop (only applicable for XML)',
        'type' => 'varchar',
        'length' => '1024',
        'not null' => FALSE,
      ),
      'filename' => array(
        'description' => 'Filename of saved XML document (only applicable for XML model)',
        'type' => 'varchar',
        'length' => '2014',
        'not null' => FALSE,
      ),
      'last_retry' => array(
        'description' => 'Unix timestamp of when record why last tried. (only applicable for XML model)',
        'type' => 'int',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );
  return $schema;
}

/**
 * Adds silverpop_transact_log table.
 */
function silverpop_transact_update_7001() {
  $schema['silverpop_transact_log'] = array(
    'description' => 'Silver pop Transact log entries.',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier of a silverpop transaction log entry.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'model' => array(
        'description' => 'XML or SMTP',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'origin' => array(
        'description' => 'Module or Rule',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the email record was created.',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'status' => array(
        'description' => 'Boolean indicating success/failure. Only applicable with XML mode messages.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 1,
      ),
      'silverpop_message' => array(
        'description' => 'Success/Failure message as sent by Silverpop (only applicable for XML)',
        'type' => 'varchar',
        'length' => '1024',
        'not null' => FALSE,
      ),
      'filename' => array(
        'description' => 'Filename of saved XML document (only applicable for XML model)',
        'type' => 'varchar',
        'length' => '2014',
        'not null' => FALSE,
      ),
      'last_retry' => array(
        'description' => 'Unix timestamp of when record why last tried. (only applicable for XML model)',
        'type' => 'int',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );
  db_create_table('silverpop_transact_log', $schema['silverpop_transact_log']);
}
