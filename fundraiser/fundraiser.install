<?php
/**
 * @file
 * Install, update and uninstall functions for the fundraiser module.
 */

/**
 * Implements hook_install().
 */
function fundraiser_install() {
  variable_set('fundraiser_development_mode', 1);
}

/**
 * Implements hook_uninstall().
 */
function fundraiser_uninstall() {
  db_query("DROP VIEW {fundraiser_webform_data}");
  db_query("DROP VIEW {fundraiser_webform_recurring_order}");
}

/**
 * Implements hook_enable().
 */
function fundraiser_enable() {
  configure_ubercart_settings();
  create_countries();

  /**
   *  Add the donation_form node type to the array of node types handled
   * by the webform module.
   *
   * The default value is array('webform') because this variable starts
   * off empty, until an admin chooses webform node types at
   * admin/settings/webform. If you save the webform_node_types as an
   * array with ONLY donation_form, then webform nodes will not be
   * handled as webforms.
   */
  $result = variable_get('webform_node_types', array('webform'));
  $result[] = 'donation_form';
  variable_set('webform_node_types', $result);

  // New for webform 3.9. Let webform know the primary purpose of this node type is for webforms
  $result = variable_get('webform_node_types_primary', array('webform'));
  if (!in_array('donation_form', $result)) {
    $result[] = 'donation_form';
    variable_set('webform_node_types_primary', $result);
  }
}

/**
 * Implements hook_disable().
 */
function fundraiser_disable() {
  remove_ubercart_settings();
  remove_countries();
  // Remove donation_form from the list of webform_node_types.
  // Not really necessary, but still good to clean up after ourselves
  $result = variable_get('webform_node_types', array('webform'));
  if (is_array($result)) {
    foreach ($result as $index => $type) {
      if ($type == 'donation_form') {
        unset($result[$index]);
        variable_set('webform_node_types', $result);
        break;
      }
    }
  }
}

/**
 * Implements hook_schema().
 */
function fundraiser_schema() {
  $schema['fundraiser'] = array(
    'description' => 'Stores data for donation_form nodes.',
    'fields' => array(
      'nid' => array(
        'description' => 'The node id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'gateway' => array(
        'description' => 'The payment gateway the donation form uses to process credit cards.',
        'type' => 'varchar',
        'length' => '50',
        'not null' => TRUE,
      ),
      'receipt_email_from' => array(
        'description' => 'The name that will appear in the from line in the receipt email.',
        'type' => 'varchar',
        'length' => '100',
        'not null' => FALSE,
      ),
      'receipt_email_address' => array(
        'description' => 'The from email address that will be used in the receipt email.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'receipt_email_subject' => array(
        'description' => 'The subject line of the receipt email.',
        'type' => 'varchar',
        'length' => '100',
        'not null' => FALSE,
      ),
      'receipt_email_message' => array(
        'description' => 'The message that will appear in the receipt email.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'donation_amounts' => array(
        'description' => 'A comma delimited string of ask amounts to be displayed on the donation form.',
        'type' => 'varchar',
        'length' => '100',
        'not null' => FALSE,
      ),
      'show_other_amount' => array(
        'description' => 'Flag to toggle the other amount field on and off.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => FALSE,
        'default' => 0,
      ),
      'minimum_donation_amount' => array(
        'description' => 'The minimum donation amount the donation form will accept.',
        'type' => 'numeric',
        'not null' => FALSE,
        'precision' => '15',
        'scale' => '3',
      ),
      'internal_name' => array(
        'description' => 'Another name for the donation form that will not be displayed to end users.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'confirmation_page_title' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'confirmation_page_body' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'confirmation_page_format' => array(
        'description' => 'input type for the confirmation page textarea',
        'type' => 'int',
      ),
      'redirect_url' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('nid'),
  );
  $schema['fundraiser_webform_order'] = array(
    'description' => 'TODO: please describe this table!',
    'fields' => array(
      'webform_nid' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'order_id' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'sid' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'sfid' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'varchar',
        'length' => '40',
        'not null' => FALSE,
      ),
      'gateway' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'varchar',
        'length' => '100',
        'not null' => FALSE,
      ),
      'txn_id' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'varchar',
        'length' => '55',
        'not null' => FALSE,
      ),
      'recurring_status' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
    ),
    'primary key' => array('webform_nid', 'order_id'),
  );
  $schema['fundraiser_refund'] = array(
    'description' => 'Stores information about refunds made on donations',
    'fields' => array(
      'refund_id' => array(
        'description' => 'Primary key: refund ID',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'order_id' => array(
        'description' => 'Ubercart order ID the refund applies to',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'receipt_id' => array(
        'description' => 'Ubercart receipt ID of the payment',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'amount' => array(
        'description' => 'Amount of the refund (positive)',
        'type' => 'float',
        'not null' => FALSE,
      ),
      'txn_id' => array(
        'description' => 'Transaction ID of the refund',
        'type' => 'varchar',
        'length' => '55',
        'not null' => FALSE,
      ),
      'reason' => array(
        'description' => 'Reason for the refund',
        'type' => 'text',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('refund_id'),
    'indexes' => array('refund_order_id' => array('order_id')),
  );
  $schema['fundraiser_recurring'] = array(
    'description' => 'Stores information about recurring orders.',
    'fields' => array(
      'master_order_id' => array(
        'description' => 'Master order ID from ubercart.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'order_id' => array(
        'description' => 'This specific recurring order id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'next_charge' => array(
        'description' => 'When to charge the order next.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'sf_opportunity_id' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'varchar',
        'length' => '40',
        'not null' => FALSE,
      ),
      'sf_recurring_id' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'sf_stagename' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'sf_sync_status' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'gateway_resp' => array(
        'description' => 'Gateway response to the charge.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'attempts' => array(
        'description' => 'Number of attempts made to charge.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'cancellation_reason' => array(
        'description' => 'If cancelled, reason why.',
        'type' => 'varchar',
        'length' => '500',
        'not null' => FALSE,
      ),
      'gateway' => array(
        'description' => 'Gateway to process order with.',
        'type' => 'varchar',
        'length' => '100',
        'not null' => FALSE,
      ),
      'txn_id' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'varchar',
        'length' => '55',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('order_id'),
  );
  $schema['fundraiser_component_map'] = array(
    'description' => 'TODO: please describe this table!',
    'fields' => array(
      'nid' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'cid' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'map_id' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'varchar',
        'length' => '100',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('nid', 'cid'),
  );
  $schema['fundraiser_tracking'] = array(
    'description' => 'Store conversion & pageview information for donation forms.',
    'fields' => array(
      'nid' => array(
        'description' => 'Donation Form node ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'pageviews' => array(
        'description' => 'Number of times the donation form has been viewed.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'conversions' => array(
        'description' => 'Number of times the donation form has been submitted successfully.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'local_failures' => array(
        'description' => 'Number of times form submission has resulted in form_set_error().',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'gateway_failures' => array(
        'description' => 'Number of times submission has resulted in a failure reported by the payment gateway.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid'),
  );
  return $schema;
}

/**
 * Helper function. Adds fundraiser specific ubercart settings.
 */
function configure_ubercart_settings() {
  $statuses = _fundraiser_statuses();
  foreach ($statuses as $status_id => $status) {
    $id = db_insert('uc_order_statuses')->fields(array(
      'order_status_id' => $status_id,
      'title' => $status['title'],
      'state' => $status['state'],
      'weight' => $status['weight'],
      'locked' => $status['locked'],
    ))->execute();
  }
}

/**
 * Helper function. Removes fundraiser specific ubercart settings.
 */
function remove_ubercart_settings() {
  $statuses = _fundraiser_statuses();
  foreach ($statuses as $status_id => $status) {
    db_delete('uc_order_statuses')->condition('order_status_id', $status_id)->execute();
  }
}

/**
 * Helper function. Returns an array of fundraiser module specific order statuses.
 */
function _fundraiser_statuses() {
  $fundraiser_statuses = array(
    'pending_future_payment' => array(
      'title' => 'Pending Future Payment',
      'state' => 'post_checkout',
      'locked' => 1,
      'weight' => -20,
    ),
    'failed' => array(
      'title' => 'Failed',
      'state' => 'canceled',
      'locked' => 1,
      'weight' => -20,
    ),
    'refunded' => array(
      'title' => 'Refunded',
      'state' => 'post_checkout',
      'locked' => 1,
      'weight' => -21,
    ),
    'partially_refunded' => array(
      'title' => 'Partially Refunded',
      'state' => 'post_checkout',
      'locked' => 1,
      'weight' => -21,
    ),
  );
  return $fundraiser_statuses;
}

/**
 * Helper function. Adds all countries to the ubercart countries table.
 */
function create_countries() {
  remove_countries();
  $country_set = array();
  $country_set[] = array(4,'Afghanistan','AF','AFG',1);
  $country_set[] = array(248,'Aland Islands','AX','ALA',1);
  $country_set[] = array(8,'Albania','AL','ALB',1);
  $country_set[] = array(12,'Algeria','DZ','DZA',1);
  $country_set[] = array(16,'American Samoa','AS','ASM',1);
  $country_set[] = array(20,'Andorra','AD','AND',1);
  $country_set[] = array(24,'Angola','AO','AGO',1);
  $country_set[] = array(660,'Anguilla','AI','AIA',1);
  $country_set[] = array(10,'Antarctica','AQ','ATA',1);
  $country_set[] = array(28,'Antigua and Barbuda','AG','ATG',1);
  $country_set[] = array(32,'Argentina','AR','ARG',1);
  $country_set[] = array(51,'Armenia','AM','ARM',1);
  $country_set[] = array(533,'Aruba','AW','ABW',1);
  $country_set[] = array(36,'Australia','AU','AUS',1);
  $country_set[] = array(40,'Austria','AT','AUT',1);
  $country_set[] = array(31,'Azerbaijan','AZ','AZE',1);
  $country_set[] = array(44,'Bahamas','BS','BHS',1);
  $country_set[] = array(48,'Bahrain','BH','BHR',1);
  $country_set[] = array(50,'Bangladesh','BD','BGD',1);
  $country_set[] = array(52,'Barbados','BB','BRB',1);
  $country_set[] = array(112,'Belarus','BY','BLR',1);
  $country_set[] = array(56,'Belgium','BE','BEL',1);
  $country_set[] = array(84,'Belize','BZ','BLZ',1);
  $country_set[] = array(204,'Benin','BJ','BEN',1);
  $country_set[] = array(60,'Bermuda','BM','BMU',1);
  $country_set[] = array(64,'Bhutan','BT','BTN',1);
  $country_set[] = array(68,'Bolivia','BO','BOL',1);
  $country_set[] = array(70,'Bosnia and Herzegovina','BA','BIH',1);
  $country_set[] = array(72,'Botswana','BW','BWA',1);
  $country_set[] = array(74,'Bouvet Island','BV','BVT',1);
  $country_set[] = array(76,'Brazil','BR','BRA',1);
  $country_set[] = array(86,'British Indian Ocean Territory','IO','IOT',1);
  $country_set[] = array(96,'Brunei Darussalam','BN','BRN',1);
  $country_set[] = array(100,'Bulgaria','BG','BGR',1);
  $country_set[] = array(854,'Burkina Faso','BF','BFA',1);
  $country_set[] = array(108,'Burundi','BI','BDI',1);
  $country_set[] = array(116,'Cambodia','KH','KHM',1);
  $country_set[] = array(120,'Cameroon','CM','CMR',1);
  $country_set[] = array(132,'Cape Verde','CV','CPV',1);
  $country_set[] = array(136,'Cayman Islands','KY','CYM',1);
  $country_set[] = array(140,'Central African Republic','CF','CAF',1);
  $country_set[] = array(148,'Chad','TD','TCD',1);
  $country_set[] = array(152,'Chile','CL','CHL',1);
  $country_set[] = array(156,'China','CN','CHN',1);
  $country_set[] = array(162,'Christmas Island','CX','CXR',1);
  $country_set[] = array(166,'Cocos (Keeling) Islands','CC','CCK',1);
  $country_set[] = array(170,'Colombia','CO','COL',1);
  $country_set[] = array(174,'Comoros','KM','COM',1);
  $country_set[] = array(178,'Congo','CG','COG',1);
  $country_set[] = array(180,'Congo, The Democratic Republic of the','CD','COD',1);
  $country_set[] = array(184,'Cook Islands','CK','COK',1);
  $country_set[] = array(188,'Costa Rica','CR','CRI',1);
  $country_set[] = array(384,'Cote D\'ivoire','CI','CIV',1);
  $country_set[] = array(191,'Croatia','HR','HRV',1);
  $country_set[] = array(192,'Cuba','CU','CUB',1);
  $country_set[] = array(196,'Cyprus','CY','CYP',1);
  $country_set[] = array(203,'Czech Republic','CZ','CZE',1);
  $country_set[] = array(208,'Denmark','DK','DNK',1);
  $country_set[] = array(262,'Djibouti','DJ','DJI',1);
  $country_set[] = array(212,'Dominica','DM','DMA',1);
  $country_set[] = array(214,'Dominican Republic','DO','DOM',1);
  $country_set[] = array(218,'Ecuador','EC','ECU',1);
  $country_set[] = array(818,'Egypt','EG','EGY',1);
  $country_set[] = array(222,'El Salvador','SV','SLV',1);
  $country_set[] = array(226,'Equatorial Guinea','GQ','GNQ',1);
  $country_set[] = array(232,'Eritrea','ER','ERI',1);
  $country_set[] = array(233,'Estonia','EE','EST',1);
  $country_set[] = array(231,'Ethiopia','ET','ETH',1);
  $country_set[] = array(238,'Falkland Islands (Malvinas)','FK','FLK',1);
  $country_set[] = array(234,'Faroe Islands','FO','FRO',1);
  $country_set[] = array(242,'Fiji','FJ','FJI',1);
  $country_set[] = array(246,'Finland','FI','FIN',1);
  $country_set[] = array(250,'France','FR','FRA',1);
  $country_set[] = array(254,'French Guiana','GF','GUF',1);
  $country_set[] = array(258,'French Polynesia','PF','PYF',1);
  $country_set[] = array(260,'French Southern Territories','TF','ATF',1);
  $country_set[] = array(266,'Gabon','GA','GAB',1);
  $country_set[] = array(270,'Gambia','GM','GMB',1);
  $country_set[] = array(268,'Georgia','GE','GEO',1);
  $country_set[] = array(276,'Germany','DE','DEU',1);
  $country_set[] = array(288,'Ghana','GH','GHA',1);
  $country_set[] = array(292,'Gibraltar','GI','GIB',1);
  $country_set[] = array(300,'Greece','GR','GRC',1);
  $country_set[] = array(304,'Greenland','GL','GRL',1);
  $country_set[] = array(308,'Grenada','GD','GRD',1);
  $country_set[] = array(312,'Guadeloupe','GP','GLP',1);
  $country_set[] = array(316,'Guam','GU','GUM',1);
  $country_set[] = array(320,'Guatemala','GT','GTM',1);
  $country_set[] = array(831,'Guernsey','GG','GGY',1);
  $country_set[] = array(324,'Guinea','GN','GIN',1);
  $country_set[] = array(624,'Guinea-bissau','GW','GNB',1);
  $country_set[] = array(328,'Guyana','GY','GUY',1);
  $country_set[] = array(332,'Haiti','HT','HTI',1);
  $country_set[] = array(334,'Heard Island and Mcdonald Islands','HM','HMD',1);
  $country_set[] = array(340,'Honduras','HN','HND',1);
  $country_set[] = array(344,'Hong Kong','HK','HKG',1);
  $country_set[] = array(348,'Hungary','HU','HUN',1);
  $country_set[] = array(352,'Iceland','IS','ISL',1);
  $country_set[] = array(356,'India','IN','IND',1);
  $country_set[] = array(360,'Indonesia','ID','IDN',1);
  $country_set[] = array(364,'Iran (Islamic Republic of)','IR','IRN',1);
  $country_set[] = array(368,'Iraq','IQ','IRQ',1);
  $country_set[] = array(372,'Ireland','IE','IRL',1);
  $country_set[] = array(833,'Isle of Man','IM','IMM',1);
  $country_set[] = array(376,'Israel','IL','ISR',1);
  $country_set[] = array(380,'Italy','IT','ITA',1);
  $country_set[] = array(388,'Jamaica','JM','JAM',1);
  $country_set[] = array(392,'Japan','JP','JPN',1);
  $country_set[] = array(832,'Jersey','JE','JEY',1);
  $country_set[] = array(400,'Jordan','JO','JOR',1);
  $country_set[] = array(398,'Kazakhstan','KZ','KAZ',1);
  $country_set[] = array(404,'Kenya','KE','KEN',1);
  $country_set[] = array(296,'Kiribati','KI','KIR',1);
  $country_set[] = array(408,'Korea, Democratic People\'s Republic of','KP','PRK',1);
  $country_set[] = array(410,'Korea, Republic of','KR','KOR',1);
  $country_set[] = array(414,'Kuwait','KW','KWT',1);
  $country_set[] = array(417,'Kyrgyzstan','KG','KGZ',1);
  $country_set[] = array(418,'Lao People\'s Democratic Republic','LA','LAO',1);
  $country_set[] = array(428,'Latvia','LV','LVA',1);
  $country_set[] = array(422,'Lebanon','LB','LBN',1);
  $country_set[] = array(426,'Lesotho','LS','LSO',1);
  $country_set[] = array(430,'Liberia','LR','LBR',1);
  $country_set[] = array(434,'Libyan Arab Jamahiriya','LY','LBY',1);
  $country_set[] = array(438,'Liechtenstein','LI','LIE',1);
  $country_set[] = array(440,'Lithuania','LT','LTU',1);
  $country_set[] = array(442,'Luxembourg','LU','LUX',1);
  $country_set[] = array(446,'Macao','MO','MAC',1);
  $country_set[] = array(807,'Macedonia, The Former Yugoslav Republic of','MK','MKD',1);
  $country_set[] = array(450,'Madagascar','MG','MDG',1);
  $country_set[] = array(454,'Malawi','MW','MWI',1);
  $country_set[] = array(458,'Malaysia','MY','MYS',1);
  $country_set[] = array(462,'Maldives','MV','MDV',1);
  $country_set[] = array(466,'Mali','ML','MLI',1);
  $country_set[] = array(470,'Malta','MT','MLT',1);
  $country_set[] = array(584,'Marshall Islands','MH','MHL',1);
  $country_set[] = array(474,'Martinique','MQ','MTQ',1);
  $country_set[] = array(478,'Mauritania','MR','MRT',1);
  $country_set[] = array(480,'Mauritius','MU','MUS',1);
  $country_set[] = array(175,'Mayotte','YT','MYT',1);
  $country_set[] = array(484,'Mexico','MX','MEX',1);
  $country_set[] = array(583,'Micronesia, Federated States of','FM','FSM',1);
  $country_set[] = array(498,'Moldova, Republic of','MD','MDA',1);
  $country_set[] = array(492,'Monaco','MC','MCO',1);
  $country_set[] = array(496,'Mongolia','MN','MNG',1);
  $country_set[] = array(499,'Montenegro','ME','MNE',1);
  $country_set[] = array(500,'Montserrat','MS','MSR',1);
  $country_set[] = array(504,'Morocco','MA','MAR',1);
  $country_set[] = array(508,'Mozambique','MZ','MOZ',1);
  $country_set[] = array(104,'Myanmar','MM','MMR',1);
  $country_set[] = array(516,'Namibia','NA','NAM',1);
  $country_set[] = array(520,'Nauru','NR','NRU',1);
  $country_set[] = array(524,'Nepal','NP','NPL',1);
  $country_set[] = array(528,'Netherlands','NL','NLD',1);
  $country_set[] = array(530,'Netherlands Antilles','AN','ANT',1);
  $country_set[] = array(540,'New Caledonia','NC','NCL',1);
  $country_set[] = array(554,'New Zealand','NZ','NZL',1);
  $country_set[] = array(558,'Nicaragua','NI','NIC',1);
  $country_set[] = array(562,'Niger','NE','NER',1);
  $country_set[] = array(566,'Nigeria','NG','NGA',1);
  $country_set[] = array(570,'Niue','NU','NIU',1);
  $country_set[] = array(574,'Norfolk Island','NF','NFK',1);
  $country_set[] = array(580,'Northern Mariana Islands','MP','MNP',1);
  $country_set[] = array(578,'Norway','NO','NOR',1);
  $country_set[] = array(512,'Oman','OM','OMN',1);
  $country_set[] = array(586,'Pakistan','PK','PAK',1);
  $country_set[] = array(585,'Palau','PW','PLW',1);
  $country_set[] = array(275,'Palestinian Territory, Occupied','PS','PSE',1);
  $country_set[] = array(591,'Panama','PA','PAN',1);
  $country_set[] = array(598,'Papua New Guinea','PG','PNG',1);
  $country_set[] = array(600,'Paraguay','PY','PRY',1);
  $country_set[] = array(604,'Peru','PE','PER',1);
  $country_set[] = array(608,'Philippines','PH','PHL',1);
  $country_set[] = array(612,'Pitcairn','PN','PCN',1);
  $country_set[] = array(616,'Poland','PL','POL',1);
  $country_set[] = array(620,'Portugal','PT','PRT',1);
  $country_set[] = array(630,'Puerto Rico','PR','PRI',1);
  $country_set[] = array(634,'Qatar','QA','QAT',1);
  $country_set[] = array(638,'Reunion','RE','REU',1);
  $country_set[] = array(642,'Romania','RO','ROU',1);
  $country_set[] = array(643,'Russian Federation','RU','RUS',1);
  $country_set[] = array(646,'Rwanda','RW','RWA',1);
  $country_set[] = array(654,'Saint Helena','SH','SHN',1);
  $country_set[] = array(659,'Saint Kitts and Nevis','KN','KNA',1);
  $country_set[] = array(662,'Saint Lucia','LC','LCA',1);
  $country_set[] = array(666,'Saint Pierre and Miquelon','PM','SPM',1);
  $country_set[] = array(670,'Saint Vincent and the Grenadines','VC','VCT',1);
  $country_set[] = array(882,'Samoa','WS','WSM',1);
  $country_set[] = array(674,'San Marino','SM','SMR',1);
  $country_set[] = array(678,'Sao Tome and Principe','ST','STP',1);
  $country_set[] = array(682,'Saudi Arabia','SA','SAU',1);
  $country_set[] = array(686,'Senegal','SN','SEN',1);
  $country_set[] = array(688,'Serbia','RS','SRB',1);
  $country_set[] = array(690,'Seychelles','SC','SYC',1);
  $country_set[] = array(694,'Sierra Leone','SL','SLE',1);
  $country_set[] = array(702,'Singapore','SG','SGP',1);
  $country_set[] = array(703,'Slovakia','SK','SVK',1);
  $country_set[] = array(705,'Slovenia','SI','SVN',1);
  $country_set[] = array(90,'Solomon Islands','SB','SLB',1);
  $country_set[] = array(706,'Somalia','SO','SOM',1);
  $country_set[] = array(710,'South Africa','ZA','ZAF',1);
  $country_set[] = array(239,'South Georgia and the South Sandwich Islands','GS','SGS',1);
  $country_set[] = array(724,'Spain','ES','ESP',1);
  $country_set[] = array(144,'Sri Lanka','LK','LKA',1);
  $country_set[] = array(736,'Sudan','SD','SDN',1);
  $country_set[] = array(740,'Suriname','SR','SUR',1);
  $country_set[] = array(744,'Svalbard and Jan Mayen','SJ','SJM',1);
  $country_set[] = array(748,'Swaziland','SZ','SWZ',1);
  $country_set[] = array(752,'Sweden','SE','SWE',1);
  $country_set[] = array(756,'Switzerland','CH','CHE',1);
  $country_set[] = array(760,'Syrian Arab Republic','SY','SYR',1);
  $country_set[] = array(158,'Taiwan, Province of China','TW','TWN',1);
  $country_set[] = array(762,'Tajikistan','TJ','TJK',1);
  $country_set[] = array(834,'Tanzania, United Republic of','TZ','TZA',1);
  $country_set[] = array(764,'Thailand','TH','THA',1);
  $country_set[] = array(626,'Timor-leste','TL','TLS',1);
  $country_set[] = array(768,'Togo','TG','TGO',1);
  $country_set[] = array(772,'Tokelau','TK','TKL',1);
  $country_set[] = array(776,'Tonga','TO','TON',1);
  $country_set[] = array(780,'Trinidad and Tobago','TT','TTO',1);
  $country_set[] = array(788,'Tunisia','TN','TUN',1);
  $country_set[] = array(792,'Turkey','TR','TUR',1);
  $country_set[] = array(795,'Turkmenistan','TM','TKM',1);
  $country_set[] = array(796,'Turks and Caicos Islands','TC','TCA',1);
  $country_set[] = array(798,'Tuvalu','TV','TUV',1);
  $country_set[] = array(800,'Uganda','UG','UGA',1);
  $country_set[] = array(804,'Ukraine','UA','UKR',1);
  $country_set[] = array(784,'United Arab Emirates','AE','ARE',1);
  $country_set[] = array(826,'United Kingdom','GB','GBR',1);
  $country_set[] = array(581,'United States Minor Outlying Islands','UM','UMI',1);
  $country_set[] = array(858,'Uruguay','UY','URY',1);
  $country_set[] = array(860,'Uzbekistan','UZ','UZB',1);
  $country_set[] = array(548,'Vanuatu','VU','VUT',1);
  $country_set[] = array(336,'Vatican City State (Holy See)','VA','VAT',1);
  $country_set[] = array(862,'Venezuela','VE','VEN',1);
  $country_set[] = array(704,'Viet Nam','VN','VNM',1);
  $country_set[] = array(92,'Virgin Islands (British)','VG','VGB',1);
  $country_set[] = array(850,'Virgin Islands (U.S.)','VI','VIR',1);
  $country_set[] = array(876,'Wallis and Futuna','WF','WLF',1);
  $country_set[] = array(732,'Western Sahara','EH','ESH',1);
  $country_set[] = array(887,'Yemen','YE','YEM',1);
  $country_set[] = array(891,'Yugoslavia','YU','YUG',1);
  $country_set[] = array(894,'Zambia','ZM','ZMB',1);
  $country_set[] = array(716,'Zimbabwe','ZW','ZWE',1);
  foreach ($country_set as $country) {
    $id = db_insert('uc_countries')->fields(array(
      'country_id' => $country[0],
      'country_name' => $country[1],
      'country_iso_code_2' => $country[2],
      'country_iso_code_3' => $country[3],
      'version' => $country[4],
    ))->execute();
  }
  $id = db_insert('uc_zones')->fields(array(
    'zone_country_id' => 0,
    'zone_code' => 'NA',
    'zone_name' => 'N/A',
  ))->execute();
}

/**
 * Helper function. Removes all countries.
 */
function remove_countries() {
  db_delete('uc_countries')->execute();
  db_delete('uc_zones')->condition('zone_country_id', 0)->execute();
  create_default_countries();
}

/** 
 * Helper function. Creates the default countries.
 */
function create_default_countries() {
  $id = db_insert('uc_countries')->fields(array(
    'country_id' => 124,
    'country_name' => 'Canada',
    'country_iso_code_2' => 'CA',
    'country_iso_code_3' => 'CAN',
    'version' => '1',
  ))->execute();
  $id = db_insert('uc_countries')->fields(array(
    'country_id' => 840,
    'country_name' => 'United States',
    'country_iso_code_2' => 'US',
    'country_iso_code_3' => 'USA',
    'version' => '1',
  ))->execute();
}

/**
 * Implements hook_update_last_removed().
 */
function hook_update_last_removed() {
  // We've removed versions of this module prior to 7.x-3.x.
  // The next update function is fundraiser_update_7000().
  return 6309;
}

/**
 * 7.x branch updates below.
 */

