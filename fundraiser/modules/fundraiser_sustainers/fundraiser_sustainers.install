<?php
/**
 * @file
 * Install, update and uninstall functions for the fundraiser module.
 */

/**
 * Implements hook_schema().
 */
function fundraiser_sustainers_schema() {
  $schema['fundraiser_sustainers'] = array(
    'description' => 'Stores information about recurring orders.',
    'fields' => array(
      'master_did' => array(
        'description' => 'Master donation id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'did' => array(
        'description' => 'This specific recurring donation id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'next_charge' => array(
        'description' => 'When to charge the donation next.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      // TODO strongly consider moving these to another table.
      'sf_opportunity_id' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'varchar',
        'length' => '40',
        'not null' => FALSE,
      ),
      'sf_recurring_id' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'sf_stagename' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'sf_sync_status' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      // SF fields should not be here.
      'gateway_resp' => array(
        'description' => 'Gateway response to the charge.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'attempts' => array(
        'description' => 'Number of attempts made to charge.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'cancellation_reason' => array(
        'description' => 'If cancelled, reason why.',
        'type' => 'varchar',
        'length' => '500',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('did'),
  );
  return $schema;
}

/**
 * Implements hook_install().
 */
function fundraiser_sustainers_install() {
  // First we need to checkif old data from old tables is still around.
  // If we've never pulled any of this data before, we need to move it over.
  if (db_table_exists('fundraiser_recurring')) {
    // Copy all data over from the old fundraiser_recurring table to the new table in the correct location.
    db_query('INSERT INTO {fundraiser_sustainers} ' .
      '(master_did, did, next_charge, sf_opportunity_id, sf_recurring_id, sf_stagename, sf_sync_status, ' .
        'gateway_resp, attempts, cancellation_reason) ' .
      'SELECT master_order_id, order_id, next_charge, sf_opportunity_id, sf_recurring_id, sf_stagename, sf_sync_status, ' .
        'gateway_resp, attempts, cancellation_reason '.
      'FROM {fundraiser_recurring}');

    // The table doesn't go away yet, because we may still need it for fundraiser.
    // But if fundraiser has flagged that it's done porting data, we can drop it.
    if (variable_get('fundraiser_port_recurring_done', FALSE)) {
      db_drop_table('fundraiser_recurring');
      variable_det('fundraiser_port_recurring_done');
    }
  }
  // Create default SF map insert into table.
  $map = array();
  $map = entity_create('salesforce_genmap_map', $map);
  $map->nid = -1;
  $map->map_handler = 'fundraiser_sustainers';
  $map->salesforce_object_type = 'npe03__Recurring_Donation__c';
  $object_type = '';
  //module_load_include('inc', 'salesforce_genmap', 'includes/salesforce_genmap.map');
  //if (function_exists('salesforce_get_api')) {
  //  $sfapi = salesforce_get_api();
  //  if ($sfapi->isAuthorized()) {
  //    if (function_exists('_sfw_salesforce_record_type_list')) {
  //      $sf_records = _sfw_salesforce_record_type_list($sfapi, 'npe03__Recurring_Donation__c');
  //      $sf_records = array_flip($sf_records);
  //      $object_type = $sf_records['Donation'];
  //    }
  //  }
  //}
  // There seems to be no subtype record type for recurring donations, so leaving this out.
  $map->salesforce_record_type = $object_type;
  $map->salesforce_dedupe_field = 'Order_ID__c';
  $map->field_map = array(
    'fundraiser_sustainers_map' => array(
      'full_name' => 'Name',
      'amount' => 'npe03__Amount__c',
      'contact' => 'npe03__Contact__c',
      'installment_period' => 'npe03__Installment_Period__c',
      'schedule_type' => 'npe03__Schedule_Type__c',
      'installments' => 'npe03__Installments__c',
      'last_payment_date' => 'npe03__Last_Payment_Date__c',
      'next_payment_date' => 'npe03__Next_Payment_Date__c',
    ),
  );
  $map->sync_options = array(
    'insert' => 'insert',
    'update' => 'update',
    'delete' => 'delete',
  );
  $map->status = 1;
  $map->module = 'fundraiser_sustainers';
  salesforce_genmap_save_map($map, 'fundraiser_sustainers');
}
