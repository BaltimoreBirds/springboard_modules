<?php
/**
 * @file
 * Install, update and uninstall functions for the fundraiser module.
 */

/**
 * Implements hook_schema().
 */
function fundraiser_sustainers_schema() {
  $schema['fundraiser_sustainers'] = array(
    'description' => 'Stores information about recurring orders.',
    'fields' => array(
      'master_did' => array(
        'description' => 'Master donation id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'did' => array(
        'description' => 'This specific recurring donation id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'next_charge' => array(
        'description' => 'When to charge the donation next.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      // TODO strongly consider moving these to another table.
      'sf_opportunity_id' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'varchar',
        'length' => '40',
        'not null' => FALSE,
      ),
      'sf_recurring_id' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'sf_stagename' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'sf_sync_status' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      // SF fields should not be here.
      'gateway_resp' => array(
        'description' => 'Gateway response to the charge.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'attempts' => array(
        'description' => 'Number of attempts made to charge.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'cancellation_reason' => array(
        'description' => 'If cancelled, reason why.',
        'type' => 'varchar',
        'length' => '500',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('did'),
  );
  return $schema;
}

/**
 * Implements hook_update_N().
 */
function fundraiser_sustainers_update_7000(&$sandbox) {
  // Copy all data over from the old fundraiser_recurring table to the new table in the correct location.
  db_query('INSERT INTO {fundraiser_sustainers} ' .
    '(master_did, did, next_charge, sf_opportunity_id, sf_recurring_id, sf_stagename, sf_sync_status, ' .
      'gateway_resp, attempts, cancellation_reason) ' .
    'SELECT master_order_id, order_id, next_charge, sf_opportunity_id, sf_recurring_id, sf_stagename, sf_sync_status, ' .
      'gateway_resp, attempts, cancellation_reason '.
    'FROM {fundraiser_recurring}');
}

/**
 * Implements hook_update_N().
 */
function fundraiser_sustainers_update_7001(&$sandbox) {
  // Drop fundraiser_recurring table. All data has been moved out of it by now. (Hence why this is on hook 7001.
  // See hook 7000 in fundraiser.install.
  db_drop_table('fundraiser_recurring');
}
