<?php

/**
 * @file
 * Setup class for fundraiser_commerce tests.
 */

module_load_include('test', 'fundraiser', 'tests/fundraiser');

/**
 * Setup and tear down web class. Does nothing else.
 */
class FundraiserCommerceTestSetup extends FundraiserTestSetup {

  /**
   * Implemenation of setUp().
   */
  public function setUp($modules = array(), $permissions = array()) {
    $modules = array_merge($modules, array(
      'fundraiser_commerce',
    ));
    parent::setUp($modules, $permissions);
  }
}

class FundraiserCommerceGatewayTestSetUp extends FundraiserCommerceTestSetup {
  protected $privileged_user;

  public static function getInfo() {
    return array(
      'name' => 'Fundraiser Commerce Gateway',
      'description' => 'Parent class for testing the Fundraiser Commerce Gateways',
      'group' => 'Fundraiser',
    );
  }

  public function setUp($modules = array(), $permissions = array()) {
    parent::setUp($modules, $permissions);

    $permissions = array_merge($permissions, array(
      'administer site configuration',
      'administer nodes',
      'create donation form',
      'edit any donation form',
      'configure store',
      'administer payment methods',
      'administer payments',
      'view payments',
    ));
    $this->privileged_user = $this->drupalCreateUser($permissions);
    $this->drupalLogin($this->privileged_user);

    $this->donation_form = $this->createDonationForm();
  }

  protected function _importGatewayRule($config) {
    $rules_config = rules_import($config);
    if ($existing_config = rules_config_load($rules_config->name)) {
      // Copy DB id and remove the new indicator to overwrite the existing record.
      $rules_config->id = $existing_config->id;
      unset($rules_config->is_new);
    }
    $rules_config->active = 1;
    $rules_config->save();
  }

}
