<?php

/**
 * @file form_layouts.module
 * Provide options for form layouts in donation forms.
 */
 
/**
 * Implementation of hook_theme().
 *
 * Add a theme function for each file found in /templates.
 */
function form_layouts_theme($existing, $type, $theme, $path) {
  $templates = _form_layouts_template_list();
  foreach ($templates as $template) {
    $theme[$template['theme']] = array(
      'variables' => array('form' => NULL),
      'template' => $template['template'],
      'pattern' => $template['pattern'],
    );
  }
  return $theme;
}

/**
 * Implementation of hook_theme_registry_alter().
 *
 * Add in a special preprocess function for all donation forms.
 */
function form_layouts_theme_registry_alter(&$theme_registry) {
  $templates = _form_layouts_template_list();
  foreach ($templates as $template) {
    $theme_registry[$template['theme']]['preprocess functions'][] = 'form_layouts_preprocess_template';
  }
}

/**
 * Preprocess function for donation form layout themeing.
 *
 * Breaks the form into easily digestable chunks.
 */
function form_layouts_preprocess_template(&$vars) {
  $vars['donation_fieldset'] = drupal_render($vars['form']['submitted']['donation']);
  $vars['donor_information_fieldset'] = drupal_render($vars['form']['submitted']['donor_information']);
  $vars['billing_address_fieldset'] = drupal_render($vars['form']['submitted']['billing_information']);
  $vars['credit_card_fieldset'] = drupal_render($vars['form']['submitted']['credit_card_information']);
}

/**
 * Preprocess function for  2 column donation form.
 *
 * Adds some css to make 2 columns.
 */
function form_layouts_preprocess_two_column(&$vars) {
  drupal_add_css(drupal_get_path('module', 'form_layouts') . '/css/form_layouts_two_column.css'));
}

/**
 * Implementation of hook_form_alter().
 */
function form_layouts_form_alter(&$form, $form_state, $form_id) {
  // If this is a webform client form and donation type, then theme it.
  if (strstr($form_id, 'webform_client_form')) {
    $node = $form['#parameters'][2];
    if ($node->type == 'donation_form') {
      $theme = _form_layouts_theme_template($node->nid);
      $form['#theme'] = array($theme . '_' . $node->nid, $theme);
    }
  }
  // If this is a form to add a donation form, add a dropdown to pick the layout.
  if ($form_id == 'donation_form_node_form') {
    $nid = $form['#node']->nid;
    $files = _form_layouts_template_list();
    $options = array();
    foreach ($files as $file) {
      $options[$file['theme']] = $file['name'];
    }
    $theme = _form_layouts_theme_template($nid);
    $form['fundraiser_settings']['layout'] = array(
      '#type' => 'select',
      '#title' => t('Form layout'),
      '#options' => $options,
      '#default_value' => $theme,
      '#weight' => -4,
    );
  }
}

/**
 * Implementation of hook_node_load().
 *
 * Make sure the layout gets loaded.
 */
function form_layouts_node_load($nodes, $types) {
  foreach ($nodes as $nid => $node) {
    if ($node->type == 'donation_form') {
      $nodes[$nid]->layout_template = _form_layouts_theme_template($nid);
    }
  }
}

/**
 * Implementation of hook_node_insert().
 *
 * Make sure the layout gets inserted.
 */
function form_layouts_node_insert($node) {
  form_layouts_node_update($node);
}

/**
 * Implementation of hook_node_update().
 *
 * Make sure the layout gets updated.
 */
function form_layouts_nodeapi($node) {
  if ($node->type == 'donation_form' && isset($node->layout)) {
    $variable_name = _form_layouts_variable_name($node->nid);
    variable_set($variable_name, $node->layout);
  }
}

/**
 * Returns the variable that contains which layout the donation form uses.
 *
 * @param $nid
 *  The id of the node whose template to return.
 */
function _form_layouts_theme_template($nid) {
  if (!empty($nid)) {
    $variable_name = _form_layouts_variable_name($nid);
    return variable_get($variable_name, variable_get('fundraiser_form_layouts_default', 'one_column'));
  }
  else {
    return variable_get('fundraiser_form_layouts_default', 'one_column');
  }
}

/**
 * Builds the name of a variable that will be used to store the donation form's theme template.
 *
 * @param $nid
 *   The id of the node for which the variable name will be constructed.
 */
function _form_layouts_variable_name($nid) {
  return 'donation_form_' . $nid . '_theme';
}

/**
 * Returns a list of available donation form templates.
 */
function _form_layouts_template_list() {
  $path = drupal_get_path('module', 'form_layouts') . '/templates';
  // Get all .tpl.php files in the /templates directory.
  $files = file_scan_directory($path, '.tpl.php');
  $templates = array();
  // Loop over each file and create an array of theme registry entries.
  foreach ($files as $file) {
    $name = str_replace('.tpl', '', $file->name);
    $name_no_underscores = str_replace('-', '_', $name);
    $templates[$name] = array(
      'name' => ucfirst(str_replace('-', ' ', $name)),
      'theme' => $name_no_underscores,
      'pattern' => $name_no_underscores . '_[0-9]+',
      'template' => 'templates/' . $name
    );
  }
  return $templates;
}
