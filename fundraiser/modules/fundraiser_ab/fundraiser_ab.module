<?php
/**
 * @file
 * Fundraiser A/B Test
 *
 * Adds special functionality to the Webform A/B Test module for use with
 * Fundraising forms.
 */

/**
 * @todo
 *    Add win condition for total amount collected?
 */

/**
 * Implements hook_webform_ab_get_webform_types().
 */
function fundraiser_ab_webform_ab_get_webform_types() {
  return array('fundraiser' => 'Fundraiser');
}

/**
 * Implements hook_webform_ab_validate_conversion().
 * Only returns TRUE if the webform type is fundraiser and the donation payment
 * was successful. This way, failed credit card payments are not counted as
 * conversions
 */
function fundraiser_ab_webform_ab_validate_conversion($webform_types, $test_node, $form_state) {
  if ($webform_types == 'fundraiser') {
    // If abort is TRUE, the payment failed.
    // Only return TRUE if the abort flag is NOT set to TRUE
    return ($form_state['values']['abort'] !== TRUE);
  }
}

/**
 * Implements hook_webform_ab_valid_webforms().
 * Return an array of donation forms that may be included in an A/B Test.
 */
function fundraiser_ab_webform_ab_valid_webforms($webform_types) {
  if ($webform_types == 'fundraiser') {
    $result = db_select('node', 'n')
      ->fields('n', array('nid', 'title'))
      ->condition('status', 1)
      ->condition('type', fundraiser_get_donation_types(),'IN')
      ->orderBy('title')->execute();
    $forms = array();
    while ($row = $result->fetchObject()) {
      $forms[] = $row;
    }
    return $forms;
  }
}

/**
 * Implements hook_webform_ab_valid_webforms_alter().
 * For non-Fundraiser Webform A/B tests, do NOT include donation forms
 */
function fundraiser_ab_webform_ab_valid_webforms_alter(&$forms, $webform_type) {
  // Only remove if it's a non-Fundraiser A/B test
  if ($webform_type != 'fundraiser') {
    // Get the fundraiser forms
    $fundraiser_forms = fundraiser_ab_webform_ab_valid_webforms('fundraiser');
    // Remove them each from the array of forms
    foreach ($fundraiser_forms as $f) {
      unset($forms[$f->nid]);
    }
  }
}
