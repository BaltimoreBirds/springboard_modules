<?php

/**
 * @file
 * Install hooks for the springboard_token module.
 */

/**
 * Implements hook_schema()
 */
function springboard_token_set_schema() {
  $schema = array();

  $schema['token_sets'] = array(
    'description' => 'Defines token sets.',
    'fields' => array(
      'tsid' => array(
        'description' => 'Unique ID of the token set.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Name of the token set.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('tsid'),
    'unique keys' => array(
      'name' => array('name'),
    ),
  );

  $schema['tokens'] = array(
    'description' => 'Tokens that may be used in token sets.',
    'fields' => array(
      'tid' => array(
        'description' => 'Unique ID of the token.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'token_type' => array(
        'description' => 'Type of token (node, user, etc.)',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'token' => array(
        'description' => 'The token ([node:title], [user:mail], etc.)',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'token_description' => array(
        'description' => 'The human-readable description of the token.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('tid'),
  );

  $schema['token_set_tokens'] = array(
    'description' => 'Maps tokens to token sets.',
    'fields' => array(
      'tsid' => array(
        'description' => 'Unique ID of the token set.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'tid' => array(
        'description' => 'Unique ID of the token.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('tsid', 'tid'),
  );

  return $schema;
}

/**
 * Implements hook_install()
 */
function springboard_token_set_install() {
  $token_data = json_decode(file_get_contents(drupal_get_path('module', 'springboard_token_set') . '/data/token_sets.json'));

  // Add default tokens.
  foreach ($token_data->tokens as $token) {
    springboard_token_set_add_token($token[0], $token[1], $token[2]);
  }

  // Add default tokens to token sets.
  foreach ($token_data->token_sets as $token_set) {
    $tsid = springboard_token_set_add_set($token_set->name);

    foreach ($token_set->tokens as $token_string) {
      $tid = db_query('SELECT tid FROM {tokens} WHERE `token` = :token', array(':token' => $token_string))->fetchField();

      if (!empty($tid)) {
        springboard_token_set_add_token_to_set($tsid, $tid);
      }
    }
  }
}
