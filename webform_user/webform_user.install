<?php

/**
 * @file
 * Installation file for Webform User module.
 */

/**
 * Implements hook_uninstall().
 */
function webform_user_uninstall() {
  variable_del('webform_user_node_types');
}

/**
 * Implements hook_enable().
 */
function webform_user_enable() {
  // Inform queue_processor about this change if it exists.
  if (module_exists('queue_processor')) {
    queue_processor_add_type('webform_user');
  }
}

/**
 * Implements hook_disable().
 */
function webform_user_disable() {
  // Inform queue_processor about this change if it exists.
  if (module_exists('queue_processor')) {
    queue_processor_remove_type('webform_user');
  }
}

/**
 * Implements hook_schema().
 */
function webform_user_schema() {
  $schema['webform_user'] = array(
    'description' => 'Track nodes that are enabled as webform user nodes.',
    'fields' => array(
      'nid' => array(
        'description' => 'The node',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'is_webform_user' => array(
        'description' => 'Boolean, if this is a webform user',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'authenticate_submitters' => array(
        'description' => 'Boolean, if we log users in',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'send_new_user_email' => array(
        'description' => 'Boolean, if we send new users email',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'email_field' => array(
        'description' => 'Which field is used for email',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('nid'),
    'indexes' => array(
      'nid' => array('nid'),
    ),
  );
  $schema['webform_user_component_map'] = array(
    'description' => 'The map of fields on a node to user profile fields',
    'fields' => array(
      'nid' => array(
        'description' => 'The node',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'cid' => array(
        'description' => 'The webform component',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'map_id' => array(
        'description' => 'The profile field to map to',
        'type' => 'varchar',
        'length' => '100',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('nid', 'cid'),
  );
  return $schema;
}

/**
 * Implements hook_update_N().
 */
function webform_user_update_7000(&$sandbox) {
  $current_webform_user_types = variable_get('webform_user_node_types', array('webform'));
  // For each type set at the time of update, create a new
  // variable under the new format for vars. Each should already be
  // activated for webform.
  foreach ($current_webform_user_types as $type) {
    variable_get('webform_user_' . $type, FALSE);
  }
  // Clean up after ourselves.
  variable_del('webform_user_node_types');
}
