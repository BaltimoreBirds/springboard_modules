<?php 

include_once('springboard_admin.menu.inc');

/** 
 * Implements hook_menu().
 */
 
function springboard_admin_menu() {
  $items = array();
  $items['admin/springboard/templates'] = array(
    'title' => 'Templates',
    'type' => MENU_NORMAL_ITEM,
    'access callback' => 'springboard_admin_menu_access',
    'access arguments' => array('admin/springboard/templates'),
    'page callback' => 'springboard_admin_template_page',
  );
  return $items;
}

/**
 * Implements hook_custom_theme().
 * 
 * Force the use of springboard_backend theme on Springboard-related 
 * administration pages.
 */

function springboard_admin_custom_theme() {
  $themes = list_themes();

  if (!isset($themes['springboard_backend'])) {
    return;
  }

  $sb_menu = springboard_admin_admin_menu_items();
  $paths = array();
  foreach ($sb_menu as $item) {
    $paths[] = $item['link_path'];
    // as with the installation, if we ever need more than 2 levels of 
    // navigation, we will need real recursion here.
    foreach ($item['_children'] as $child) {
      $paths[] = $child['link_path'];
    }
  }

  if (in_array($_GET['q'], $paths)) {
    return 'springboard_backend';
  }
}

/**
 * Callback function. 
 * Performs page access checks for Springboard administrative pages.
 *
 * @param $path
 * The page path.
 * 
 * @return 
 * Boolean to indicate if access is allowed.
 *
 */

function springboard_admin_menu_access($path) {
  switch ($path) {
    case 'admin/springboard/templates':
      if (user_access('edit any page_wrapper content') || user_access('edit any email_wrapper content')) {
        return TRUE;
      }
      else {
        return FALSE;
      }
    break;
    
  }
}

/**
 * Callback function.
 * Renders page content for the "Templates" administrative page.
 * 
 * @return
 * HTML output for the page.
 */

function springboard_admin_template_page() {
  $output = '';
  
  // load Page Templates view
  $view = views_get_view('sbv_page_templates');
  $view->set_display('block_1');
  $view->set_arguments(array());
  $view->pre_execute();
  $view->execute();
  if($view && $view->access('block_1') && !empty($view->result)) {
    $output .= '<h2>' . $view->get_title('block_1') . '</h2>';
    $output .= $view->render();
  }

  // load Email Templates view
  $view = views_get_view('sbv_email_templates');
  $view->set_display('block_1');
  $view->set_arguments(array());
  $view->pre_execute();
  $view->execute();
  if($view && $view->access('block_1') && !empty($view->result)) {
    $output .= '<h2>' . $view->get_title('block_1') . '</h2>';
    $output .= $view->render();
  }
  
  return $output;
}
