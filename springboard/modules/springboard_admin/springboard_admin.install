<?php
/**
 *  @file
 */
include_once ('springboard_admin.menu.inc');

/**
 * Implements hook_install().
 *
 * Creates a custom drupal menu for the Springboard administration interface
 */

function springboard_admin_install() {
  $themes = array_keys(list_themes());
  if (in_array('springboard_backend', $themes)) {
    theme_enable(array('springboard_backend'));
  }
  // Set the weight of springboard_admin very high so our theme switch rules
  // will always override other settings.
  db_update('system')
    ->fields(array('weight' => 20))
    ->condition('name', 'springboard_admin', '=')
    ->execute();

  // Define and save the Springboard Administration menu
  $sb_menu = springboard_admin_admin_menu();
  menu_save($sb_menu);
  // Define and add default menu items to the Springboard Administration menu
  $sb_menu_items = springboard_admin_admin_menu_items();

  /*
   *  iterate through each item. Save the parent and then the children using the
   * parent's newly assign mlid as the child's plid. If the menu ever advances
   * to more than two levels, we will need to rewrite this to be recursive
   */
  foreach ($sb_menu_items as $key => $item) {
    $children = isset($item['_children']) ? $item['_children'] : array();
    $mlids = array();
    // save a top-level item
    $plid = menu_link_save($item);

    // if save was successful, loop through child items
    if ($plid) {
      $mlids[] = $plid;
      foreach ($children as $key => $child) {
        $children[$key]['plid'] = $plid;
        $mlid = menu_link_save($children[$key], array(), array($plid => $item));
        $mlids[] = $mlid;
      }
    }
    else {
      drupal_set_message('springboard admin menu item ' . $item['title'] . ' and its children were not created due to an error', 'warning');
    }
  }
  // Set menu links as customized so they don't get wiped out in the router check
  $result = db_update('menu_links')
  ->fields(array(
    'customized' => 1,
  ))
  ->condition('mlid', $mlids, 'IN')
  ->execute();

  // Set springboard_admin weight very high so it can force theme via hook_custom_theme
  db_update('system')
    ->fields(array('weight' => 9999))
    ->condition('name', 'springboard_admin', '=')
    ->execute();
}

/**
 * Implements hook_uninstall().
 *
 * Delete the custom drupal menu for the Springboard administration interface
 */

function springboard_admin_uninstall() {
  $sb_menu = springboard_admin_admin_menu();
  menu_delete($sb_menu);
}
