<?php

/**
 * @file
 * Provide options for form layouts in donation forms.
 */

/**
 * Implements hook_fundraiser_field_info()
 */
function form_layouts_fundraiser_field_info() {
  $fields = array();

  $fields['top_region'] = array(
    '#title' => t('Top region'),
    '#type' => 'fieldset',
    '#required' => 0,
    '#create_callback' => 'form_layouts_field_create',
    '#display_callback' => 'form_layouts_top_region_display',
  );

  $fields['left_region'] = array(
    '#title' => t('Left region'),
    '#type' => 'fieldset',
    '#required' => 0,
    '#create_callback' => 'form_layouts_field_create',
    '#display_callback' => 'form_layouts_left_region_display',
  );

  $fields['right_region'] = array(
    '#title' => t('Right region'),
    '#type' => 'fieldset',
    '#required' => 0,
    '#create_callback' => 'form_layouts_field_create',
    '#display_callback' => 'form_layouts_right_region_display',
  );

  $fields['bottom_region'] = array(
    '#title' => t('Bottom region'),
    '#type' => 'fieldset',
    '#required' => 0,
    '#create_callback' => 'form_layouts_field_create',
    '#display_callback' => 'form_layouts_bottom_region_display',
  );

  return $fields;
}

/**
 * Implements hook_fundraiser_field_info_alter().
 */
function form_layouts_fundraiser_field_info_alter(&$info) {
  $info['top_region']['donation'] = $info['donation'];
  $info['left_region']['donor_information'] = $info['donor_information'];
  $info['right_region']['billing_information'] = $info['billing_information'];
  $info['bottom_region']['payment_information'] = $info['payment_information'];

  unset($info['donation']);
  unset($info['donor_information']);
  unset($info['billing_information']);
  unset($info['payment_information']);
}

/**
 * @param stdClass $fundraiser
 * @param array $field
 *
 * @return FALSE|array $field
 */
function form_layouts_field_create($fundraiser, $field) {
//  dpm($fundraiser);
//  dpm($field);

  return $field;
}

function form_layouts_top_region_display($form, $form_state, $field) {
  $field['#attributes']['class'][] = 'span12';
  $field['#prefix'] = '<div class="row">';
  $field['#suffix'] = '</div>';
  return $field;
}

function form_layouts_left_region_display($form, $form_state, $field) {
  $field['#attributes']['class'][] = 'span6';
  $field['#prefix'] = '<div class="row">';
//  $field['#suffix'] = '</div>';
  return $field;
}

function form_layouts_right_region_display($form, $form_state, $field) {
  $field['#attributes']['class'][] = 'span6';
//  $field['#prefix'] = '<div class="row">';
  $field['#suffix'] = '</div>';
  return $field;
}

function form_layouts_bottom_region_display($form, $form_state, $field) {
  $field['#attributes']['class'][] = 'span12';
  $field['#prefix'] = '<div class="row">';
  $field['#suffix'] = '</div>';
  return $field;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter() for node forms.
 */
function form_layouts_form_node_form_alter(&$form, &$form_state, $form_id) {
  if (fundraiser_is_donation_type($form['#node']->type)) {
    $form['form_layouts'] = array(
      '#type' => 'fieldset',
      '#title' => t('Form Layout'),
      '#description' => t('Select the form layout for this form. Defaults to one-column layout.'),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );
    $form['form_layouts']['form_layouts'] = array(
      '#type' => 'select',
      '#title' => t('Layout'),
      '#options' => form_layouts_get_layout_options(),
      '#default_value' => 0,
      '#description' => 'Choose an initial layout for the form.  Choose None to leave the layout as-is.',
    );
  }
}

// @todo Replace with DB
function form_layouts_get_layout_options() {
  return array(
    0 => 'None',
    1 => 'One Column',
    2 => 'Two Columns',
  );
}

function form_layouts_fundraiser_create_fundraiser_alter($fundraiser) {
  dpm($fundraiser);
}
