<?php
/**
 * @file
 * Install, update, and uninstall functions for the springboard_p2p module.
 */

/**
 * Implements hook_install().
 */
function springboard_p2p_install() {
  springboard_p2p_add_donation_form_content_type();
}

/**
 * Implements hook_uninstall().
 */
function springboard_p2p_uninstall() {
  variable_del('springboard_p2p_base_path');
  variable_del('springboard_p2p_fundraiser_items');
  variable_del('springboard_p2p_registration_fields');
  variable_del('springboard_p2p_webform_user_items');
}

/**
 * Implements hook_schema().
 */
function springboard_p2p_schema() {
  $schema = array();

  $schema['springboard_p2p_private_campaign_approval'] = array(
    'description' => 'Stores approval status for private campaigns.',
    'fields' => array(
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {users}.uid.',
        'default' => 0,
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {node}.nid of the private campaign.',
        'default' => 0,
      ),
      'status' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'description' => 'The state of the user\'s approval request.',
        'default' => 'requested',
      ),
      'created' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "Timestamp of when approval was requested.",
      ),
    ),
    'indexes' => array(
      'status' => array('status'),
    ),
    'primary key' => array('uid', 'nid'),
    'foreign keys' => array(
      'node_nid' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
      'users_uid' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );

  $schema['springboard_p2p_personal_campaign_action'] = springboard_p2p_personal_campaign_action_schema();

  return $schema;
}

/**
 * The schema definition for the personal campaign action table.
 *
 * @return array
 *   Schema definition.
 */
function springboard_p2p_personal_campaign_action_schema() {
  return array(
    'description' => 'Stores data about a user completing a form for a personal campaign.',
    'fields' => array(
      'category_nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {node}.nid of the p2p category.',
        'default' => 0,
      ),
      'campaign_nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {node}.nid of the p2p campaign.',
        'default' => 0,
      ),
      'personal_campaign_nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {node}.nid of the private campaign.',
        'default' => 0,
      ),
      'personal_campaign_uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {users}.uid of the campaigner.',
        'default' => 0,
      ),
      'form_nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {node}.nid of the webform user or fundraiser node.',
        'default' => 0,
      ),
      'sid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The submission id of the action.',
        'default' => 0,
      ),
      'action_type' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'description' => 'The type of the action. Either donation or submission.',
        'default' => 'requested',
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {users}.uid of the submitter.',
        'default' => 0,
      ),
      'show_name' => array(
        'description' => 'Boolean indicating whether show the submitter\'s name.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'size' => 'tiny',
        'default' => 0,
      ),
      'comment' => array(
        'description' => 'The comment.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'amount' => array(
        'description' => 'The donation amount if this is a donation.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => NULL,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when this action was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'personal_campaign_nid' => array('personal_campaign_nid'),
    ),
    'primary key' => array('form_nid', 'uid', 'created'),
    'foreign keys' => array(
      'category_nid' => array(
        'table' => 'node',
        'columns' => array('category_nid' => 'nid'),
      ),
      'campaign_nid' => array(
        'table' => 'node',
        'columns' => array('campaign_nid' => 'nid'),
      ),
      'personal_campaign_nid' => array(
        'table' => 'node',
        'columns' => array('personal_campaign_nid' => 'nid'),
      ),
      'personal_campaign_uid' => array(
        'table' => 'users',
        'columns' => array('personal_campaign_uid' => 'uid'),
      ),
      'form_nid' => array(
        'table' => 'node',
        'columns' => array('form_nid' => 'nid'),
      ),
      'uid_uid' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );
}

/**
 * Create the p2p_donation_form content type.
 */
function springboard_p2p_add_donation_form_content_type() {
  $type = node_type_set_defaults();
  $type->name = t('Peer to peer Donation Form');
  $type->type = 'p2p_donation_form';
  $type->description = t('Springboard provided P2P donation form type.');
  $type->title_label = t('Title');
  $type->has_title = ($type->title_label != '');
  $type->base = 'node_content';
  $type->custom = TRUE;
  $type->modified = TRUE;
  $type->module = 'springboard_p2p';
  // Save or reset persistent variable values.
  $variables = array(
    'node_submitted' => 0,
    'comment' => COMMENT_NODE_HIDDEN,
    'fundraiser' => 1,
    'webform_user' => 1,
    'webform_user_default_fields' => array(
      'webform_user_all_profile_fields' => 'webform_user_all_profile_fields',
    ),
  );
  foreach ($variables as $key => $value) {
    $variable_new = $key . '_' . $type->type;
    if (is_array($value)) {
      $value = array_keys(array_filter($value));
    }
    variable_set($variable_new, $value);
  }
  node_type_save($type);
  node_types_rebuild();
  node_add_body_field($type);
  // Add as a webform.
  $webform_node_types = variable_get('webform_node_types', array('webform'));
  $webform_node_types_primary = variable_get('webform_node_types_primary', array('webform'));
  $webform_node_types = array_merge($webform_node_types, array('p2p_donation_form'));
  $webform_node_types_primary = array_merge($webform_node_types_primary, array('p2p_donation_form'));
  variable_set('webform_node_types', array_unique($webform_node_types));
  variable_set('webform_node_types_primary', array_unique($webform_node_types_primary));
  // Done.
  drupal_set_message(t('The content type <em>p2p_donation_form</em> has been added.'));
  watchdog('springboard_p2p', 'Added content type p2p_donation_form.');
}

/**
 * Adds the springboard_p2p_personal_campaign_action table.
 */
function springboard_p2p_update_7001() {
  $table = array(
    'description' => 'Stores data about a user completing a form for a personal campaign.',
    'fields' => array(
      'category_nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {node}.nid of the p2p category.',
        'default' => 0,
      ),
      'campaign_nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {node}.nid of the p2p campaign.',
        'default' => 0,
      ),
      'personal_campaign_nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {node}.nid of the private campaign.',
        'default' => 0,
      ),
      'personal_campaign_uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {users}.uid of the campaigner.',
        'default' => 0,
      ),
      'form_nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {node}.nid of the webform user or fundraiser node.',
        'default' => 0,
      ),
      'action_type' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'description' => 'The type of the action. Either donation or submission.',
        'default' => 'requested',
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {users}.uid of the submitter.',
        'default' => 0,
      ),
      'show_name' => array(
        'description' => 'Boolean indicating whether show the submitter\'s name.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'size' => 'tiny',
        'default' => 0,
      ),
      'comment' => array(
        'description' => 'The comment.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'amount' => array(
        'description' => 'The donation amount if this is a donation.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => NULL,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when this action was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'personal_campaign_nid' => array('personal_campaign_nid'),
    ),
    'primary key' => array('form_nid', 'uid', 'created'),
    'foreign keys' => array(
      'category_nid' => array(
        'table' => 'node',
        'columns' => array('category_nid' => 'nid'),
      ),
      'campaign_nid' => array(
        'table' => 'node',
        'columns' => array('campaign_nid' => 'nid'),
      ),
      'personal_campaign_nid' => array(
        'table' => 'node',
        'columns' => array('personal_campaign_nid' => 'nid'),
      ),
      'personal_campaign_uid' => array(
        'table' => 'users',
        'columns' => array('personal_campaign_uid' => 'uid'),
      ),
      'form_nid' => array(
        'table' => 'node',
        'columns' => array('form_nid' => 'nid'),
      ),
      'uid_uid' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );
  db_create_table('springboard_p2p_personal_campaign_action', $table);
}

/**
 * Adds sid to the springboard_p2p_personal_campaign_action table.
 */
function springboard_p2p_update_7002() {
  $field = array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'description' => 'The submission id of the action.',
    'default' => 0,
  );
  db_add_field('springboard_p2p_personal_campaign_action', 'sid', $field);
}

/**
 * Adds the default p2p_donation_form content type.
 */
function springboard_p2p_update_7003() {
  springboard_p2p_add_donation_form_content_type();
}
