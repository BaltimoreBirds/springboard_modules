<?php

/**
 * @file
 * Primary test class for Springboard API module
 */

class EmailWrappersTestCase extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Email Wrappers',
      'description' => 'Email Wrappers functional tests.',
      'group' => 'Email Wrappers',
    );
  }

  /**
   * Implementation of setUp().
   */
  public function setUp() {
    parent::setUp(array('webform', 'springboard_api', 'ctools', 'services', 'rest_server'));
    $this->privileged_user = $this->drupalCreateUser(array(
      'administer site configuration',
      'create webform content',
      'edit own webform content',
      'access all webform results',
      'administer springboard api',
      'administer services',
    ));
    $this->drupalLogin($this->privileged_user);

    // create service configuration:
    $record = array(
      'eid' => '',
      'name' => 'springboard',
      'server' => 'rest_server',
      'path' => 'springboard',
      'authentication' => array(),
      'server_settings' => array(
        'formatters' => array(
          'bencode' => 1,
          'json' => 1,
          'jsonp' => 1,
          'php' => 1,
          'xml' => 1,
        ),
        'parsers' => array(
          'application/json' => 1,
          'application/vnd.php.serialized' => 1,
          'application/x-www-form-urlencoded' => 1,
          'multipart/form-data' => 1,
          'text/xml' => 1,
        ),
      ),
      'resources' => array(
        'springboard-forms' => array(
          'operations' => array(
            'retrieve' => array(
              'enabled' => 1,
            ),
            'index' => array(
              'enabled' => 1,
            ),
          ),
          'actions' => array(
            'submit' => array(
              'enabled' => 1,
            ),
          ),
        ),
      ),
      'debug' => 1,
    );
    drupal_write_record('services_endpoint', $record);
  }

  public function testSpringboardApiIndex() {
    $this->drupalLogin($this->privileged_user);
    $this->webform = $this->_springboard_api_create_webform();
  }

  private function _springboard_api_create_webform() {
    $webform_components = array(
      // Test date components.
      'date' => array(
        'component' => array(
          'form_key' => 'date',
          'name' => 'Date',
          'type' => 'date',
          'value' => '19 Nov 1978',
          'extra' => array(
            'timezone' => 'site',
            'start_date' => '-100 years',
            'end_date' => '+2 years',
          ),
          'mandatory' => '0',
          'pid' => '0',
          'weight' => '-15',
        ),
        'sample values' => array('day' => '30', 'month' => '9', 'year' => '1982'),
        'database values' => array('1982-09-30'),
        'database default values' => array('1978-11-19'),
      ),
      // Test select components.
      'checkboxes' => array(
        'component' => array(
          'form_key' => 'checkboxes',
          'name' => 'Checkboxes',
          'type' => 'select',
          'value' => 'two',
          'extra' => array(
            'items' => "one|one\ntwo|two\nthree|three",
            'multiple' => 1,
          ),
          'mandatory' => '0',
          'pid' => '0',
          'weight' => '-15',
        ),
        'sample values' => array('one' => TRUE, 'two' => FALSE, 'three' => TRUE),
        'database values' => array('one', 'three'),
        'database default values' => array('two'),
      ),
      'radios' => array(
        'component' => array(
          'form_key' => 'radios',
          'name' => 'Radios',
          'type' => 'select',
          'value' => 'two',
          'extra' => array(
            'items' => "one|one\ntwo|two\nthree|three",
          ),
          'mandatory' => '1',
          'pid' => '0',
          'weight' => '-9',
        ),
        'sample values' => 'one',
        'database values' => array('one'),
        'database default values' => array('two'),
      ),
      'select' => array(
        'component' => array(
          'form_key' => 'select',
          'name' => 'Select',
          'type' => 'select',
          'value' => 'one',
          'extra' => array(
            'description' => 'Description here',
            'items' => "one|one\ntwo|two\nthree|three\nfour|four\nfive|five\nsix|six",
            'aslist' => 1,
          ),
          'mandatory' => '1',
          'pid' => '0',
          'weight' => '-15',
        ),
        'sample values' => 'two',
        'database values' => array('two'),
        'database default values' => array('one'),
      ),
      // Test email components.
      'email' => array(
        'component' => array(
          'form_key' => 'email',
          'name' => 'E-mail',
          'type' => 'email',
          'value' => '%useremail',
          'mandatory' => '0',
          'extra' => array(
            // SimpleTest does not support type="email" input fields.
            'attributes' => array('type' => 'text'),
          ),
          'pid' => '0',
          'weight' => '-5',
        ),
        'sample values' => 'admin@localhost.localhost',
        'database values' => array('admin@localhost.localhost'),
        'database default values' => array($this->webform_users['admin']->mail),
      ),
      // Test hidden components.
      'hidden' => array(
        'component' => array(
          'form_key' => 'hidden',
          'name' => 'Hidden',
          'type' => 'hidden',
          'value' => 'default hidden value',
          'mandatory' => '1',
          'pid' => '0',
          'weight' => '-4',
        ),
        'sample values' => NULL,
        'database values' => array('default hidden value'),
        'database default values' => array('default hidden value'),
      ),
      'textfield' => array(
        'component' => array(
          'form_key' => 'textfield_test',
          'name' => 'Textfield',
          'type' => 'textfield',
          'value' => '',
          'extra' => array(
            'width' => '20',
          ),
          'mandatory' => '1',
          'pid' => '0',
          'weight' => '-6',
        ),
        'sample values' => '',
        'database values' => array(),
        'database default values' => array(),
      ),
    );

    $settings = array(
      'type' => 'webform',
      'language'  => LANGUAGE_NONE,
      'uid' => '1',
      'status' => '1',
      'promote' => '1',
      'moderate' => '0',
      'sticky' => '0',
      'tnid' => '0',
      'translate' => '0',
      'title' => 'Test Webform',
      'body' => array(LANGUAGE_NONE => array(array('value' => 'Donec placerat. Nullam nibh dolor, blandit sed, fermentum id, imperdiet sit amet, neque. Nam mollis ultrices justo. Sed tempor. Sed vitae tellus. Etiam sem arcu, eleifend sit amet, gravida eget, porta at, wisi. Nam non lacus vitae ipsum viverra pretium. Phasellus massa. Fusce magna sem, gravida in, feugiat ac, molestie eget, wisi. Fusce consectetuer luctus ipsum. Vestibulum nunc. Suspendisse dignissim adipiscing libero. Integer leo. Sed pharetra ligula a dui. Quisque ipsum nibh, ullamcorper eget, pulvinar sed, posuere vitae, nulla. Sed varius nibh ut lacus. Curabitur fringilla. Nunc est ipsum, pretium quis, dapibus sed, varius non, lectus. Proin a quam. Praesent lacinia, eros quis aliquam porttitor, urna lacus volutpat urna, ut fermentum neque mi egestas dolor.'))),
      'teaser' => array(LANGUAGE_NONE => array(array('value' => 'Donec placerat. Nullam nibh dolor, blandit sed, fermentum id, imperdiet sit amet, neque. Nam mollis ultrices justo. Sed tempor. Sed vitae tellus. Etiam sem arcu, eleifend sit amet, gravida eget, porta at, wisi. Nam non lacus vitae ipsum viverra pretium. Phasellus massa. Fusce magna sem, gravida in, feugiat ac, molestie eget, wisi. Fusce consectetuer luctus ipsum. Vestibulum nunc. Suspendisse dignissim adipiscing libero. Integer leo. Sed pharetra ligula a dui. Quisque ipsum nibh, ullamcorper eget, pulvinar sed, posuere vitae, nulla. Sed varius nibh ut lacus. Curabitur fringilla.'))),
      'log' => '',
      'format' => '1',
      'webform' => array(
        'confirmation' => 'Thanks!',
        'confirmation_format' => filter_default_format(),
        'redirect_url' => '<confirmation>',
        'teaser' => '0',
        'allow_draft' => '1',
        'submit_text' => '',
        'submit_limit' => '-1',
        'submit_interval' => '-1',
        'submit_notice' => '1',
        'roles' => array('1', '2'),
        'components' => array(),
        'emails' => array(),
      ),
    );
    $cid = 0;
    foreach ($weform_components as $key => $component_info) {
      $cid++;
      $settings['webform']['components'][$cid] = $component_info['component'];
      $settings['webform']['components'][$cid]['cid'] = $cid;
      $settings['webform']['components'][$cid]['pid'] = 0;
    }

    $webform_node = $this->drupalCreateNode($settings);

    return $webform_node;

  }
}