<?php

/**
 * @file
 * Install hooks for the Salesforce Queue module.
 */

/**
 * Implements hook_schema().
 */
function salesforce_queue_schema() {
  $schema['salesforce_queue'] = array(
    'description' => 'Salesforce queue',
    'fields' => array(
      'item_id' => array(
        'description' => 'Unique id of the queue item.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'drupal_id' => array(
        'description' => 'The id of the Drupal object.',
        'type' => 'varchar',
        'length' => '50',
        'not null' => TRUE,
        'default' => '',
      ),
      'module' => array(
        'description' => 'Name of the module that implements the Drupal type.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'delta' => array(
        'description' => 'Name or id of the Drupal sub-type.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'salesforce_type' => array(
        'description' => 'The Salesforce object type.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'operation' => array(
        'description' => 'The action to take in Salesforce.',
        'type' => 'varchar',
        'length' => '10',
        'not null' => TRUE,
        'default' => '',
      ),
      'dedupe_field' => array(
        'description' => 'The Salesforce field to dedupe on during UPSERT operations.',
        'type' => 'varchar',
        'length' => '40',
        'not null' => FALSE,
        'default' => NULL,
      ),
      'sobject' => array(
        'description' => 'The Salesforce sObject in json format.',
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
      ),
      'queue' => array(
        'description' => 'The name of the processing queue this item is within.',
        'type' => 'varchar',
        'length' => '40',
        'not null' => FALSE,
        'default' => 'new',
      ),
      'count' => array(
        'description' => 'Number of times this item as failed attempts to be processed.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'Timestamp of when the item was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'expire' => array(
        'description' => 'Timestamp of when a processor\'s claim to the item will expire.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'locked' => array(
        'description' => 'Flag to indicate that the item is locked.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('item_id'),
    'indexes' => array(
      'IX_Drupal_Id' => array('drupal_id'),
    ),
  );

  return $schema;
}
