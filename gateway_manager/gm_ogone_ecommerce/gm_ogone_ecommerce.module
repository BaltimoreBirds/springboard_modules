<?php
// $Id: gm_ogone_ecommerce.module,v 1.0.0.0 2011/04/13 21:27:56 pcave Exp $

/**
 * @file
 * A test version of the Ogone ecommerce payment gateway.
 *
 */
 
/**
 * Implementation of hook_menu().
 */
function gm_ogone_ecommerce_menu() {
  $items['ogone/post/%uc_order'] = array(
    'title' => t('Ogone e-commerce'),
    'page callback' => 'gm_ogone_ecommerce_build_form',
    'page arguments' => array(2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

function gm_ogone_ecommerce_build_form($order) {
  drupal_add_js(drupal_get_path('module', 'gm_ogone_ecommerce') . '/gm_ogone_ecommerce.js');
  return drupal_get_form('gm_ogone_ecommerce_post_form', $order);
}

function gm_ogone_ecommerce_post_form(&$form_state, $order) {
  $url = 'https://secure.ogone.com/ncol/test/orderstandard.asp';
  $sha_in_phrase = "thisismyINpassphrase?";
  $sha_out_phrase = "thisismyOUTpassphrase!";
  
  $url_base = current(parse_url($_SERVER['HTTP_REFERER'])).'://'.$_SERVER['HTTP_HOST'].url();
  
  //Make SHA1 string for pre payment verification
  $arguments = array(
    'ACCEPTURL' => '',
    'AMOUNT' => $order->order_total * 100,
    'BGCOLOR' => '',
    'BRAND' => '',
    'BUTTONBGCOLOR' => '',
    'BUTTONTXTCOLOR' => '',
    'CANCELURL' => '',
    'CATALOGURL' => '',
    'CN' => $order->billing_first_name . ' ' . $order->billing_last_name,
    'COM' => '',
    'CURRENCY' => 'EUR',
    'DECLINEURL' => '',
    'EMAIL' => $order->primary_email,
    'EXCEPTIONURL' => '',
    'FONTTYPE' => '',
    'HOMEURL' => $url_base,
    'LANGUAGE' => 'en_US',
    'LOGO' => '',
    'ORDERID' => $order->order_id,
    'OWNERADDRESS' => $order->billing_street1 . ' ' . $order->billing_street2,
    'OWNERCTY' => $order->billing_country,
    'OWNERTOWN' => $order->billing_city,
    'OWNERZIP' => $order->billing_postal_code,
    'PM' => '',
    'PSPID' => 'brockbolandcommerce',
    'TBLBGCOLOR' => '',
    'TBLTXTCOLOR' => '',
    'TITLE' => '',
    'TP' => '',
    'TXTCOLOR' => ''
  );
  
  $sha1_signature = '';
  foreach ($arguments as $param_name => $param_value) {
    $param_value = trim($param_value);
    $param_name = strtoupper($param_name);
    if (strlen($param_value) > 0) {
        $sha1_signature .= $param_name . '=' . $param_value . $sha_in_phrase;
        $form[$param_name] = array(
          '#type' => 'hidden',
          '#value' => $param_value,
        );
    }
  }
  $form['SHASign'] = array(
    '#type' => 'hidden',
    '#value' => sha1($sha1_signature),
  );
  
  
  $form['#action'] = $url;
  $form['#id'] = 'ogone-ecommerce-post';
  
  return $form;
}

/*******************************************************************************
 * Hook Functions (Ubercart)
 ******************************************************************************/

function gm_ogone_ecommerce_payment_gateway_managed() {
  $gateways[] = array(
    'id' => 'ogone_ecommerce',
    'title' => t('Ogone Ecommerce'),
    'description' => t('Process payments using Ogone\'s e-commerce payment method.'),
    'credit' => 'ogone_ecommerce_charge',
  );

  return $gateways;
}

function ogone_ecommerce_charge($order_id, $amount, $data) {
  //global $user;
  //$order = uc_order_load($order_id);
  
  drupal_goto('ogone/post/' . $order_id);
}