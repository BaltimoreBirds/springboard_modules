<?php
/**
 * @file
 * Install file for the gateway manager module. 
 * 
 */

/**
 * Implementation of hook_install().
 */
function gateway_manager_install() {
	drupal_install_schema('gateway_manager');
}

/**
 * Implementation of hook_uninstall().
 */
function gateway_manager_uninstall() {
  drupal_uninstall_schema('gateway_manager');
  $vid = variable_get('gateway_manager_vocabulary', '');
  taxonomy_del_vocabulary($vid);
}

/**
 * Implemenation of hook_enable().
 */
function gateway_manager_enable() {
  $vid = variable_get('gateway_manager_vocabulary', '');
  if (empty($vid) || is_null(taxonomy_vocabulary_load($vid))) {
    $vid = db_result(db_query("SELECT vid FROM {vocabulary} WHERE module = 'gateway_manager'"));
    if (!$vid) {
      $vocabulary = array(
        'name' => t('Payment Gateway Terms'),
        'multiple' => '1',
        'required' => '0',
        'hierarchy' => '0',
        'relations' => '0',
        'module' => 'gateway_manager',
      );
      taxonomy_save_vocabulary($vocabulary);
    }
    variable_set('gateway_manager_vocabulary', $vid);
  }
}

/**
 * Implementation of hook_schema().
 */
function gateway_manager_schema() {
  $schema['gateway_manager_gateways'] = array(
    'description' => t('Table that contains configured payment gateways.'),
    'fields' => array(
      'id' => array(
        'description' => t('Unique payment gateway id.'),
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => t('The recognizable name of the payment gateway.'),
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'uid' => array(
        'description' => t('UID of the user that created the payment gateway.'),
        'type' => 'int',
        'not null' => FALSE,
      ),
      'type' => array(
        'description' => t('The type of payment gateway (authorizenet, cybersource, etc.).'),
        'type' => 'varchar',
        'length' => '50',
        'not null' => FALSE,
      ),
      'created' => array(
        'description' => t('Timestamp of when the payment gateway was created.'),
        'type' => 'int',
        'not null' => FALSE,
      ),
      'updated' => array(
        'description' => t('Timestamp of when the gateway was last updated.'),
        'type' => 'int',
        'not null' => FALSE,
      ),
      'config' => array(
        'description' => t('Serialized configuration data for the gateway.'),
        'type' => 'text',
        'not null' => FALSE,
      ),
      'status' => array(
        'description' => t('Active or inactive toggle for this gateway.'),
        'type' => 'int',
        'default' => 1,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['gateway_manager_node'] = array(
    'description' => t('Table of gateway settings for nodes.'),
    'fields' => array(
      'nid' => array(
        'description' => 'Primary Key: The {node}.nid of the node.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'method' => array(
        'description' => t('Payment method.'),
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => ''
      ),
      'gateway_instance' => array(
        'description' => t('The ID of the configured gateway.'),
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => ''
      ),
      'label' => array(
        'description' => t('Optional label to override the default label.'),
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'weight' => array(
        'description' => 'The weight of this term in relation to other terms.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
      ),
      'default' => array(
        'description' => 'Boolean indicating if this payment type is the defaut selected on the form.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Boolean indicating whether this configuration is active on the form.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
    ),
    'primary key' => array('nid'),
  );

  $schema['term_gateway'] = array(
    'description' => t('Table to store gateway related terms.'),
    'fields' => array(
      'gid' => array(
        'description' => t('The id of the payment gateway.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'tid' => array(
        'description' => t('The id of the taxonomy term.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('gid', 'tid'),
  );
  
  return $schema;
}

/**
 * Update to add gateway manager toggle on/off field.
 */
function gateway_manager_update_6301() {
  $ret = array();
  db_add_field($ret, 'gateway_manager_gateways', 'status', array(
        'description' => t('Active or inactive toggle for this gateway.'),
        'type' => 'int',
        'default' => 1,
        'not null' => FALSE,
      ));
  db_query('UPDATE {gateway_manager_gateways} SET status = 1');
  return $ret;
}

/**
 * Add this gateway_manager_node table
 */
function gateway_manager_update_6302() {
  $ret = array();
  $schema = gateway_manager_schema();
  db_create_table($ret, 'gateway_manager_node', $schema['gateway_manager_node']);
  return $ret;
}