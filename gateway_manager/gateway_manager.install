<?php
/**
 * @file
 * Install file for the gateway manager module.
 *
 */

/**
 * Implements hook_install().
 */
function gateway_manager_install() {}

/**
 * Implements hook_uninstall().
 */
function gateway_manager_uninstall() {
  $vid = variable_get('gateway_manager_vocabulary', '');
  taxonomy_vocabulary_delete($vid);
}

/**
 * Implemenation of hook_enable().
 */
function gateway_manager_enable() {
  $vid = variable_get('gateway_manager_vocabulary', '');
  if (empty($vid) || is_null(taxonomy_vocabulary_load($vid))) {
    $vid = db_query('SELECT vid FROM {taxonomy_vocabulary} WHERE module = :module',
      array(':module' => 'gateway_manager'))->fetchField();
    if (!$vid) {
      $vocabulary = (object) array(
        'name' => t('Payment Gateway Terms'),
        'machine_name' => 'payment_gateway_terms',
        'description' => t('Managed gateways'),
        'hierarchy' => '0',
        'module' => 'gateway_manager',
      );
      taxonomy_vocabulary_save($vocabulary);
      $vid = $vocabulary->vid;
    }
    variable_set('gateway_manager_vocabulary', $vid);
  }
}

/**
 * Implements hook_schema().
 */
function gateway_manager_schema() {
  $schema['gateway_manager_gateways'] = array(
    'description' => 'Table that contains configured payment gateways.',
    'fields' => array(
      'id' => array(
        'description' => 'Unique payment gateway id.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The recognizable name of the payment gateway.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'uid' => array(
        'description' => 'UID of the user that created the payment gateway.',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'type' => array(
        'description' => 'The type of payment gateway (authorizenet, cybersource, etc.).',
        'type' => 'varchar',
        'length' => '50',
        'not null' => FALSE,
      ),
      'created' => array(
        'description' => 'Timestamp of when the payment gateway was created.',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'updated' => array(
        'description' => 'Timestamp of when the gateway was last updated.',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'config' => array(
        'description' => 'Serialized configuration data for the gateway.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'status' => array(
        'description' => 'Active or inactive toggle for this gateway.',
        'type' => 'int',
        'default' => 1,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['term_gateway'] = array(
    'description' => 'Table to store gateway related terms.',
    'fields' => array(
      'gid' => array(
        'description' => 'The id of the payment gateway.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'tid' => array(
        'description' => 'The id of the taxonomy term.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('gid', 'tid'),
  );

  return $schema;
}

/**
 * Implements hook_update_last_removed().
 */
function gateway_manager_update_last_removed() {
  return 6301;
}
