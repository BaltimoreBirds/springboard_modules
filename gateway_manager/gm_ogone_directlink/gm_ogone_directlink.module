<?php
/**
 * @file
 *  Ogone DirectLink Managed
 * 
 * Process payments using Ogone's DirectLink payment method.
 *
 * Todo
 *    - Don't require password
 *    - Only update password value if it's set
 *    - Update password description to state that it's only updated if filled
 */

/*******************************************************************************
 * Hook Functions (Ubercart)
 ******************************************************************************/

function gm_ogone_directlink_payment_gateway_managed() {
  $gateways[] = array(
    'id' => 'ogone_directlink',
    'title' => t('Ogone DirectLink'),
    'description' => t('Process payments using Ogone\'s DirectLink payment method.'),
    'credit' => 'gm_ogone_directlink_charge',
    'settings' => 'gm_ogone_directlink_settings_form',
  );

  return $gateways;
}



/**
 * Settings form for an Ogone gateway
 */
function gm_ogone_directlink_settings_form($config = array()) {
  $form['gm_ogone_directlink_pspid'] = array(
    '#type' => 'textfield',
    '#title' => t('PSPID'),
    '#description' => t('Ogone PSPID.'),
    '#maxlength' => 255,
    '#default_value' => $config['gm_ogone_directlink_pspid'],
    '#required' => TRUE,
  );
  $form['gm_ogone_directlink_userid'] = array(
    '#type' => 'textfield',
    '#title' => t('User ID'),
    '#description' => t('Ogone user ID.'),
    '#maxlength' => 255,
    '#default_value' => $config['gm_ogone_directlink_userid'],
    '#required' => TRUE,
  );
  $form['gm_ogone_directlink_password'] = array(
    '#type' => 'textfield',
    '#title' => t('Password'),
    '#description' => t('Ogone user password.'),
    '#maxlength' => 255,
    '#default_value' => $config['gm_ogone_directlink_password'],
    '#required' => TRUE,
  );


  $form['gm_ogone_directlink_transaction_mode'] = array(
    '#type' => 'radios',
    '#title' => t('Transaction Mode'),
    '#description' => t('Should transactions be made in a live or test environment? This setting will determine which of the options below are used: live or test.'),
    '#options' => array(
      'test' => t('Test'),
      'live' => t('Live'),
    ),
    '#default_value' => $config['gm_ogone_directlink_transaction_mode'],
    '#required' => TRUE,
  );
  
  
  $form['security_keys'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#title' => t('Security keys'),
    '#description' => t('SHA-1 keys used to validate the data passed to and from Ogone. Live and test transactions must use different keys. These keys are configured in the Ogone admin, under Technical Information. The SHA-IN phrase is set on the "Data and origin verification tab," and the SHA-OUT is set on the "Transaction Feedback" tab.'),
  );
  
  $form['security_keys']['test'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#title' => t('Test'),
    '#description' => t('Security keys used for test transactions'),
  );  
  $form['security_keys']['test']['gm_ogone_directlink_shain_test'] = array(
    '#type' => 'textfield',
    '#title' => t('SHA-IN Pass Phrase'),
    '#description' => t('Used to validate data sent to Ogone.'),
    '#maxlength' => 255,
    '#default_value' => $config['gm_ogone_directlink_shain_test'],
  );
  $form['security_keys']['test']['gm_ogone_directlink_shaout_test'] = array(
    '#type' => 'textfield',
    '#title' => t('SHA-OUT Pass Phrase'),
    '#description' => t('Used to validate data sent back from Ogone after payment process.'),
    '#maxlength' => 255,
    '#default_value' => $config['gm_ogone_directlink_shaout_test'],
  );
  
  $form['security_keys']['live'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#title' => t('Live'),
    '#description' => t('Security keys used for live transactions'),
  );  
  $form['security_keys']['live']['gm_ogone_directlink_shain_live'] = array(
    '#type' => 'textfield',
    '#title' => t('SHA-IN Pass Phrase'),
    '#description' => t('Used to validate data sent to Ogone.'),
    '#maxlength' => 255,
    '#default_value' => $config['gm_ogone_directlink_shain_live'],
  );
  $form['security_keys']['live']['gm_ogone_directlink_shaout_live'] = array(
    '#type' => 'textfield',
    '#title' => t('SHA-OUT Pass Phrase'),
    '#description' => t('Used to validate data sent back from Ogone after payment process.'),
    '#maxlength' => 255,
    '#default_value' => $config['gm_ogone_directlink_shaout_live'],
  );
  
  return $form;
}


/*******************************************************************************
 * Module and Helper Functions
 ******************************************************************************/

function gm_ogone_directlink_charge($order_id, $amount, $data) {
  global $user;
  $order = uc_order_load($order_id);
  $gateway_config = _gm_ogone_directlink_get_config_for_order($order);
  
  $charge_result = ogone_directlink_api_charge_credit($account_info, $charge_details);




  if ($success) {
    $context = array(
      'revision' => 'formatted-original',
      'type' => 'amount',
    );
    $message = t('Credit card charged: !amount', array('!amount' => uc_price($amount, $context)));
    uc_order_comment_save($order_id, $user->uid, $message, 'admin');
  }
  else {
    $message = t('Credit card charge failed.');
    uc_order_comment_save($order_id, $user->uid, $message, 'admin');
  }

  $result = array(
    'success' => $success,
    'comment' => t('Card charged, resolution code: 0022548315'),
    'message' => $success ? t('Credit card payment processed successfully.') : t('Credit card charge failed.'),
    'uid' => $user->uid,
    'data' => array('txn_id' => 'TEST-TXNID-001'),
  );

  return $result;
}





/**
 * Get the Ogone config variables for the given order
 * 
 * This function checks if the gateway is configured to use live or test
 * transactions, and returns the appropriate variables.
 * 
 * @param $order_or_id
 *   Ubercart order object, or an order ID
 * @return
 *   Array of gateway config info
 */
function _gm_ogone_directlink_get_config_for_order($order_or_id) {
  // Load gateway details
  $gateway = gateway_manager_gateway_for_order($order_or_id);
  $gateway_config = $gateway['config'];
 
  $config = array(
    'pspid' => $gateway_config['gm_ogone_directlink_pspid'],
  );
  
  // If using the live transaction mode, load live vars
  if ($gateway_config['gm_ogone_directlink_transaction_mode'] == 'live') {
    $config['sha_in'] = $gateway_config['gm_ogone_directlink_shain_live'];
    $config['sha_out'] = $gateway_config['gm_ogone_directlink_shaout_live'];
    $config['mode'] = 'prod';
  }
  // Not using live transactions, so use test vars
  else {
    $config['sha_in'] = $gateway_config['gm_ogone_directlink_shain_test'];
    $config['sha_out'] = $gateway_config['gm_ogone_directlink_shaout_test'];
    $config['mode'] = 'test';
  }
  return $config;
}