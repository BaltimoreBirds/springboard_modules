<?php
/**
 * @file
 *  Ogone DirectLink Managed
 * 
 * Process payments using Ogone's DirectLink payment method.
 *
 * Todo
 *    - Add better error handling on the charge response codes
 */

/*******************************************************************************
 * Hook Functions (Ubercart)
 ******************************************************************************/

function gm_ogone_directlink_payment_gateway_managed() {
  $gateways[] = array(
    'id' => 'ogone_directlink',
    'title' => t('Ogone DirectLink'),
    'description' => t('Process payments using Ogone\'s DirectLink payment method.'),
    'credit' => 'gm_ogone_directlink_charge',
    'settings' => 'gm_ogone_directlink_settings_form',
  );

  return $gateways;
}



/**
 * Settings form for an Ogone gateway
 */
function gm_ogone_directlink_settings_form($config = array()) {
  $form['gm_ogone_directlink_pspid'] = array(
    '#type' => 'textfield',
    '#title' => t('PSPID'),
    '#description' => t('Ogone PSPID.'),
    '#maxlength' => 255,
    '#default_value' => $config['gm_ogone_directlink_pspid'],
    '#required' => TRUE,
  );
  $form['gm_ogone_directlink_userid'] = array(
    '#type' => 'textfield',
    '#title' => t('User ID'),
    '#description' => t('Ogone user ID.'),
    '#maxlength' => 255,
    '#default_value' => $config['gm_ogone_directlink_userid'],
    '#required' => TRUE,
  );
  $form['gm_ogone_directlink_password'] = array(
    '#type' => 'textfield',
    '#title' => t('Password'),
    '#description' => t('Ogone user password.'),
    '#maxlength' => 255,
    '#default_value' => $config['gm_ogone_directlink_password'],
    '#required' => TRUE,
  );


  $form['gm_ogone_directlink_transaction_mode'] = array(
    '#type' => 'radios',
    '#title' => t('Transaction Mode'),
    '#description' => t('Should transactions be made in a live or test environment? This setting will determine which of the options below are used: live or test.'),
    '#options' => array(
      'test' => t('Test'),
      'live' => t('Live'),
    ),
    '#default_value' => $config['gm_ogone_directlink_transaction_mode'],
    '#required' => TRUE,
  );
  
  
  $form['security_keys'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#title' => t('Security keys'),
    '#description' => t('SHA-1 keys used to validate the data passed to Ogone. Live and test transactions must use different keys. These keys are configured in the Ogone admin, under Technical Information. The SHA-IN phrase is set on the "Data and origin verification tab."'),
  );
  
  $form['security_keys']['gm_ogone_directlink_shain_test'] = array(
    '#type' => 'textfield',
    '#title' => t('SHA-IN Pass Phrase for Test Transactions'),
    '#description' => t('Used to validate data sent to Ogone.'),
    '#maxlength' => 255,
    '#default_value' => $config['gm_ogone_directlink_shain_test'],
  );
  
  $form['security_keys']['gm_ogone_directlink_shain_live'] = array(
    '#type' => 'textfield',
    '#title' => t('SHA-IN Pass Phrase for Live Transactions'),
    '#description' => t('Used to validate data sent to Ogone.'),
    '#maxlength' => 255,
    '#default_value' => $config['gm_ogone_directlink_shain_live'],
  );
  
  $form['alias_settings'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#title' => t('Alias Settings'),
    '#description' => t('Ogone uses "aliases" to retain the payment information for users so that it may be used again in the future. This is necessary for recurring donations: credit card numbers are not stored in Springboard. Ogone manages the storage of that information and gives us an alias that we can pass them for future recurring donations.'),
  );
  $form['alias_settings']['gm_ogone_directlink_alias_enable'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable Alias usage'),
    '#description' => t('If you have not already, you may need to enable Alias Management in the Ogone admin web interface, at Configuration > Account > Your Options.'),
    '#default_value' => !empty($config['gm_ogone_directlink_alias_enable']) ? $config['gm_ogone_directlink_alias_enable'] : FALSE,
  );
  
  
  return $form;
}


/*******************************************************************************
 * Module and Helper Functions
 ******************************************************************************/

function gm_ogone_directlink_charge($order_id, $amount, $data) {
  global $user;
  $order = uc_order_load($order_id);
  
  // Build array of gateway credentials
  $gateway_config = array(
    'PSPID' => $data['config']['gm_ogone_directlink_pspid'],
    'USERID' => $data['config']['gm_ogone_directlink_userid'],
    'PSWD' => $data['config']['gm_ogone_directlink_password'],
    'ALIASOPERATION' => ($data['config']['gm_ogone_directlink_alias_enable']) ? 'BYPSP' : '',
  );
  
  // Set the SHA IN value depending on whether or not the gateway is making live transactions
  if ($data['config']['gm_ogone_directlink_transaction_mode'] == 'live') {
    $gateway_config['SHA1IN'] = $data['config']['gm_ogone_directlink_shain_test'];
  }
  else {
    $gateway_config['SHA1IN'] = $data['config']['gm_ogone_directlink_shain_live'];
  }
  

  // Build array of charge details
  $charge_details = array(
    'CURRENCY' => 'USD',    // Default currency to US dollars. This is overwritten below if needed
    'ORDERID' => $order->order_id,
    'AMOUNT' => $amount,
    'CARDNO' => $order->payment_details['cc_number'],
    'ED' => $order->payment_details['cc_exp_month'] .'/'. $order->payment_details['cc_exp_year'],
    'CVC' => $order->payment_details['cc_cvv'],
  );
  
  // If a currency was set for this order, use it
  if ($order->data['currency']) {
    $charge_details['CURRENCY'] = strtoupper($order->data['currency']);
  }
  
  
  $charge_result = ogone_directlink_api_charge_credit($gateway_config, $charge_details);
  
  $success = FALSE;
  if ($charge_result && $charge_result['NCERROR'] == 0) {
    $success = TRUE;
    $context = array(
      'revision' => 'formatted-original',
      'type' => 'amount',
    );
    $message = t('Credit card charged: !amount', array('!amount' => uc_price($amount, $context)));
    uc_order_comment_save($order_id, $user->uid, $message, 'admin');
  }
  else {
    $message = t('Credit card charge failed.');
    uc_order_comment_save($order_id, $user->uid, $message, 'admin');
  }

  $message = t('Card charged: ID: @id', array('@id' => $charge_result['PAYID']));
  $result = array(
    'success' => $success,
    'comment' => $message,
    'message' => $success ? t('Credit card payment processed successfully.') : t('Credit card charge failed.'),
    'uid' => $user->uid,
    'data' => array('module' => 'gm_ogone_directlink', 'txn_id' => $charge_result['PAYID']),
  );

  return $result;
}