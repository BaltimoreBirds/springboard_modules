<?php
/**
 * @file
 *
 * @todo Ability to lock editing of specific fields.
 * @todo Pager on submission results table
 */

/**
 * Implements hook_menu().
 */
function webform_ui_menu() {
  $items['admin/config/content/webform-ui'] = array(
    'title' => 'Webform UI',
    'description' => 'Settings for the Webform UI user interface enhancements',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('webform_ui_settings_form'),
    'access arguments' => array('configure webform ui'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'webform_ui.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_views_api().
 */
function webform_ui_views_api() {
  return array(
    'api' => 3.0,
    'path' => drupal_get_path('module', 'webform_ui'),
  );
}

/**
 * Implements hook_permission().
 */
function webform_ui_permission() {
  return array(
    'configure webform ui' => array(
      'title' => t('Configure  Webform UI user interface enhancements.'),
      'description' => t('Manage Webform UI settings.'),
    ),
  );
}

function webform_ui_form_webform_components_form_alter(&$form, &$form_state, $form_id) {
  if (variable_get('webform_ui_hide_hidden', 'FALSE')) {
    $form['#attached']['js'][] = array(
      'weight' => 100,
      'data' => drupal_get_path('module', 'webform_ui') . '/js/remove-tabledrag.js',
    );
    foreach ($form['components'] as $cid => $component) {
      if ($form['#node']->webform['components'][$cid]['type'] == 'hidden') {
//        $form['#node']->webform['components'][$cid]['weight'] = 998;
//        $form['components'][$cid]['weight']['#default_value'] = 998;
//        $form['components'][$cid]['weight']['#disabled'] = TRUE;
      }
    }
    $form['add']['weight']['#default_value'] = 999;
    $form['add']['weight']['#disabled'] = TRUE;
  }
}

function webform_ui_form_webform_configure_form_alter(&$form, &$form_state) {
  $form['role_control']['#collapsed'] = TRUE;
  $form['#after_build'][] = 'webform_ui_form_webform_configure_afterbuild';
  $form['#attached']['js'][] = array(
    'weight' => 100,
    'data' => drupal_get_path('module', 'webform_ui') . '/js/confirm-settings.js',
  );
}

function webform_ui_form_webform_configure_afterbuild($form, $form_state) {

  $form['submission']['help']['#weight'] = 0;
  return $form;
}

function webform_ui_menu_alter(&$items) {
  if (variable_get('webform_ui_use_alternate_submission', FALSE)) {
    $items['node/%webform_menu/webform-results']['page callback'] = 'webform_ui_submission_results';
    $items['node/%webform_menu/webform-results']['page arguments'] = array(1);
  }
  if (variable_get('webform_ui_hide_clear_all', FALSE)) {
    $items['node/%webform_menu/webform-results/clear']['access callback'] = 'webform_ui_submission_access';
  }
  if (variable_get('webform_ui_use_alternate_submission', FALSE)) {
    $items['node/%webform_menu/webform-results/table']['access callback'] = 'webform_ui_submission_access';
  }

}

function webform_ui_submission_results($node) {

  $view = views_get_view('webform_submissions');

  if (empty($view)) {
    return t('The webform submissions view could not be found.');
  }

  if (isset($view->display['block_1'])) {
    $view->set_display('block_1');
  }
  else {
    return t('The webform submissions display block could not be found. You may need to revert the view to restore the deleted block.');
  }

  if (!empty($node->nid)) {
    $view->set_arguments(array($node->nid));
  }

  $view->pre_execute();

  $view->execute();

  if ($view->access('block_1')) {
    return $view->preview();
  }
  else {
    return t("access denied");
  }
}

function webform_ui_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
  if (arg(2) == 'webform-results') {
    $form['#attached']['css'][] = drupal_get_path('module', 'webform_ui') . '/css/webform_ui.css';
  }
 }

function webform_ui_submission_access($node) {
  return FALSE;
}
