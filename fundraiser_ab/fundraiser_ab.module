<?php
// $Id$

/**
 * @file
 * Fundraiser A/B Test
 *
 * Adds special functionality to the Webform A/B Test module for use with Fundraising
 * forms.
 */

/**
 * Add win condition for total amount collected?
 */


/**
 * Implementation of hook_webform_ab_get_webform_types().
 */
function fundraiser_ab_webform_ab_get_webform_types() {
  return array('fundraiser' => 'Fundraiser');
}


/**
 * Implementation of hook_webform_ab_validate_conversion().
 * Only returns TRUE if the webform type is fundraiser and the donation payment 
 * was successful. This way, failed credit card payments are not counted as
 * conversions
 */
function fundraiser_ab_webform_ab_validate_conversion($webform_types, $test_node, $form_state) {
  if ($webform_types == 'fundraiser') {
    // If abort is TRUE, the payment failed. 
    // Only return TRUE if the abort flag is NOT set to TRUE
    return ($form_state['values']['abort'] !== TRUE);
  }
}


/**
 * Implementation of webform_ab_valid_webforms_alter().
 * Based on $webform_types:
 *    If fundraiser, remove non-fundraising forms
 *    If NOT fundraiser, remove any fundraiser forms from the list
 */
function fundraiser_ab_webform_ab_valid_webforms_alter(&$forms, $webform_types) {
  $result = db_query("SELECT nid FROM {fundraiser_gateway}");

  if ($webform_types == 'fundraiser') {
    // Remove non-fundraiser forms from the list of forms
    
    // Determine the fundraiser form nid's
    $valid_forms = array();
    while ($row = db_fetch_object($result)) {
      $valid_forms[] = $row->nid;
    }
    
    // Loop over all the forms that can be added, and remove any that are not
    // fundraiser forms
    foreach ($forms as $nid => $title) {
      if (!in_array($nid, $valid_forms)) {
        unset($forms[$nid]);
      }
    }
  }
  else {
    // Remove fundraising forms from the list
    while ($row = db_fetch_object($result)) {
      unset($forms[$row->nid]);
    }
  }
}