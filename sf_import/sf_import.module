<?php
// $Id: sf_import.module,v 1.0.0.0 2010/04/05 06:44:28 pcave Exp $

/**
 * @file
 * Imports objects from salesforce with the Salesforce API.
 */


/**
 * Implemenation of hook_menu().
 */
function sf_import_menu() {
	$items['admin/settings/salesforce-management/fieldmap/%fieldmap_import/import'] = array(
    'title' => 'Import settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sf_import_settings_form', 4),
    'access arguments' => array('administer salesforce management'),
    'type' => MENU_CALLBACK,
    'weight' => 1,
    'file' => 'sf_import.admin.inc',
  );

   $items['js/sf-import-filter'] = array(
    'page callback' => 'sf_import_add_filter',
    'access callback' => 'user_access',
    'access arguments' => array('administer salesforce management'),
    'file' => 'sf_import.admin.inc',
    'type' => MENU_CALLBACK,
  );
 
  return $items;
}

/**
 * Menu loader function for import settings
 */
function fieldmap_import_load($fieldmap) {

  // load the fieldmap import settings
  $settings = db_fetch_array(db_query("SELECT * FROM {sf_import_schedule} WHERE fieldmap = %d", $fieldmap));
  if (empty($settings)) {
    return array('fieldmap' => $fieldmap);
  }

  return $settings;

}

/** 
 * Implemenation of hook_cron().
 */
function sf_import_cron() {

  $sf = salesforce_management_api_connect();
  if (is_object($sf)) {

    $results = db_query("select f.fieldmap, f.drupal, f.salesforce, f.fields, f.businessSD, s.frequency, s.frequency_type, 
      s.last_import, s.filters, s.updated_objects_only, s.import_new_objects from {sf_import_schedule} s
      inner join {salesforce_management_field_map} f on f.fieldmap = s.fieldmap where s.next_import < unix_timestamp()");

    while($data = db_fetch_object($results)) {

      // construct a query to submit to salesforce using the fields in the fieldmap
      $fields = unserialize($data->fields);
      $filters = $data->filters;
      $updated_objects_only = $data->updated_objects_only;
      $rules = unserialize($data->businessSD);
      $sf_fields = array_keys($fields);
      $last_import = !empty($data->last_import) ? $data->last_import : time();

      // if id is not in the map, add it because we'll need it later
      if (!in_array('Id', $sf_fields)) {
        $sf_fields[] = "Id";
      }

      $query = 'select ' . implode(', ', $sf_fields) . ' from ' . $data->salesforce;

      if ($updated_objects_only) {
        $query .= ' where LastModifiedDate > ' . gmdate('c', $last_import); 
      }

      if (strlen($filters) > 0) { 
        if (!$updated_objects_only) {
          $query .= ' where ' . $filters;
        }
        else {
          $query .= ' and ' . $filters;
        }
      }

      // query salesforce 
      $objects = $sf->client->query($query);
      watchdog('salesforce import', t('Retrieved !num !type objects from Salesforce using query [!query]', array('!num' => $objects->size, '!type' => $data->salesforce, '!query' => $query)));

      if ($objects->size > 0) {
        // Call a hook that other modules can subscribe to in order to save the objects
        module_invoke_all('sf_import_updated_objects', $objects, $data->drupal, $data->fieldmap, $data->import_new_objects);
      }

      // update next import
      $next_import = strtotime('+'. $data->frequency . ' ' . $data->frequency_type);
      db_query("update {sf_import_schedule} set last_import = %d, next_import = %d", time(), $next_import);
    }
  }
  return "done";
}


// TODO: is this function still in use?
function _sf_import_bool_string($value) {
  if (strtolower($value) == 'true' || strtolower($value) == 'false') {
    return true;
  }
  return false;
}
