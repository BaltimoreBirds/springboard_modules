<?php

/**
 * @file
 * Common functions for all the secure prepopulate tests.
 */

class WebformConfirmationsTestCase extends DrupalWebTestCase {
 
 public static function getInfo() {
    return array(
      'name' => 'Webform Confirmations',
      'description' => 'Webform confirmations functional tests.',
      'group' => 'Webform Confirmations',
    );
  }

  /**
   * Implementation of setUp().
   */
  function setUp() {
    parent::setUp(array('webform', 'webform_confirmations'));

    $this->privileged_user = $this->drupalCreateUser(array(
      'administer site configuration',
      'create webform content',
      'edit own webform content',
      'access all webform results',
    ));
    $this->drupalLogin($this->privileged_user);
  }

  function testWebformSettings() {
    //create test webform
    $this->WebformCreate();
    // Confirm settings UI available.
    $this->drupalGet('node/1/webform/configure');
    $this->assertFieldByName('confirmation[confirmation_page_title]', '', t('Confirmation page title field present'));


    // Configure webform confirmation: page
    $this->WebformConfigureConfirmatioPage();
  
  // Submit webform
    $this->WebformPost();
    $this->assertText('Test confirmation page title', t('Confirmation page title set correctly'));
    $this->assertText('Keyser Soze', t('Webform token replacement functions as expected'));
    // Confirm confirmation page displays as expected
  }
  
  // submit webform
  // confirm confirmation page behaves as expected

  // configure webform confirmation: redirect

  // submit webform
  // confirm confirmation redirect


  private function WebformCreate() {
    $edit = array();
    $edit['title'] = 'Webform Confirmation test webform';
    $edit["body[und][0][value]"] = $this->randomName(16);
    $this->drupalPost('node/add/webform', $edit, t('Save'));
    // test webform is now node 1
    // add webform component
    $component = array(
      'nid' => 1,
      'cid' => 1,
      'pid' => 0,
      'form_key' => 'name',
      'type' => 'textfield',
      'value' => '',
      'extra' => serialize(array(
        'description' => '', 
        'private' => '',
      )),
      'mandatory' => '',
    );
     drupal_write_record('webform_component', $component);  
  }

  private function WebformPost() {
    $edit = array();
    $edit["submitted[name]"] = 'Keyser Soze';
    $this->drupalPost('node/1', $edit, t('Submit'), array(), array(), 'webform-client-form-1'); 
  }

  private function WebformConfigureConfirmatioPage() {
    $edit = array();
    $edit["confirmation[confirmation_page_title]"] = 'Test confirmation page title';
    $edit["confirmation[value]"] = 'This is a confirmation message. %value[name]';
    $edit["confirmation[format]"] = 'filtered_html';
    $edit["redirect"] = 'confirmation';
    $edit["redirect_url"] = '';
    $edit["enforce_total_limit"] = 'no';
    $edit["total_submit_limit"] = '';
    $edit["total_submit_interval"] = -1;
    $edit["enforce_limit"] = 'no';
    $edit["submit_limit"] = '';
    $edit["submit_interval"] = -1;
    $edit["status"] = 1;
    $edit["submit_notice"] = 1;
    $edit["submit_text"] = '';
    $this->drupalPost('node/1/webform/configure', $edit, t('Save configuration'));
  }
}
