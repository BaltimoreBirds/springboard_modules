<?php
/**
 * @file
 * Ogone DirectLink API
 *
 * Provides functions to interact with Ogone DirectLink method.
 * 
 * Todo
 *    - Remove hard-coded sha-in
 *    - Remove text charge menu item and function
 */

/**
 * Implements hook_menu().
 */
function ogone_directlink_api_menu() {
  $items = array();

  $items['admin/settings/ogone_directlink_api/test'] = array(
    'title' => 'Test Ogone connection',
    'description' => 'Makes a test charge over Ogone DirectLink connection',
    'page callback' => '_check_ogone_charge',
    'access callback' => TRUE,
  );
  return $items;
}



function _check_ogone_charge() {
  $account_info = array(
    'PSPID' => 'brockbolandcommerce',
    'USERID' => 'directlinkapiu',
    'PSWD' => 'iT2s@9?PKr',
    'CURRENCY' => 'EUR',
  );
  
  $charge_details = array(
    'ORDERID' => '1395',
    'AMOUNT' => '13.12',
    'CARDNO' => '4111111111111111',
    'ED' => '0212',
    'CVC' => '123',
  );
  
  $charge_result = ogone_directlink_api_charge_credit($account_info, $charge_details);

  return '<pre>' . print_r($charge_result, true) . '</pre>';
}


/**
 * Charge a credit card
 * 
 * @param $acct_info
 *   Array of Ogone account info to use
 * @param $charge_details
 *   Array of details about the charge to be made
 */
function ogone_directlink_api_charge_credit($acct_info, $charge_details) {
  // Charge amount should be multiplied by 100 - Ogone doesn't accept decimals for this field
  $charge_details['AMOUNT'] = $charge_details['AMOUNT'] * 100;
  $charge_details['OPERATION'] = 'SAL';
  return _ogone_directlink_api_make_post_request($acct_info, $charge_details);
}


/**
 * Charge direct debit
 * 
 * @param $acct_info
 *   Array of Ogone account info to use
 * @param $charge_details
 *   Array of details about the charge to be made
 */
function ogone_directlink_api_charge_direct_debit($acct_info, $charge_details) {
  
}


/**
 * Issue a refund (credit, in the payment gateway's terms)
 * 
 * @param $acct_info
 *   Array of Ogone account info to use
 * @param $refund_details
 *   Array of details about the refund to be made
 */
function ogone_directlink_api_charge_refund($acct_info, $refund_details) {
  
}


/**
 * Make a form POST to Ogone. This is an API function called by the other functions in this module
 * 
 * @param $acct_info
 *   Array of Ogone account info to use
 * @param $request_details
 *   
 */
function _ogone_directlink_api_make_post_request($acct_info, $request_details) {
  $url = "https://secure.ogone.com/ncol/test/orderdirect.asp";
  //$url = "https://secure.ogone.com/ncol/prod/ orderdirect.asp";
  
  $fields = array();
  foreach($acct_info as $field => $value) {
    $fields[$field] = $value;
  }
  foreach($request_details as $field => $value) {
    $fields[$field] = $value;
  }
  $fields['SHASIGN'] = ogone_directlink_api_generate_sha($fields, 'thisismyINpassphrase?');
  
  foreach ($fields as $field => $value) {
    $fields_string[] = $field . '=' . urlencode($value);
  }
  
  $fields_string = implode('&', $fields_string);
  
  //open connection
  $ch = curl_init();

  //set the url, number of POST vars, POST data
  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_POST, 1);
  curl_setopt($ch, CURLOPT_POSTFIELDS, $fields_string);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 0);
  curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
  curl_setopt($ch, CURLOPT_NOPROGRESS, 1);  
  curl_setopt($ch, CURLOPT_VERBOSE, 0);
  

  //execute post
  $result = curl_exec($ch);
  
  // Log any errors to the watchdog.
  if ($error = curl_error($ch)) {
    watchdog('ogone_directlink_api', 'cURL error: @error', array('@error' => $error), WATCHDOG_ERROR);
    return FALSE;
  }  

  //close connection
  curl_close($ch);
  
  // Create an XML parser and pull the attributes out of the returned XML
  $parser = xml_parser_create();
  xml_parse_into_struct($parser, $result, $return_values, $index);
  xml_parser_free($parser);
  $attributes = $return_values[$index['NCRESPONSE'][0]]['attributes'];
  
 
  return $attributes;
}





/**
 * Validate the feedback with the SHA-1 signature
 */
function ogone_directlink_api_feedback_valid_sha1($feedback, $sha1out) {
  return (ogone_directlink_api_generate_sha($feedback, $sha1out) == $feedback['SHASIGN']);
}


/**
 * Generate the SHA value for an array of fields, with a pass phrase to separate field values
 */
function ogone_directlink_api_generate_sha($fields, $sha_pass_phrase) {
  $sha1_string = '';
  foreach (ogone_directlink_api_sha1_out_parameters() as $param) {
    if (isset($fields[$param])) {
      $sha1_string .= $param . '=' . $fields[$param] . $sha_pass_phrase;
    }
  }
  return strtoupper(sha1($sha1_string));
}

/**
 * Get a list of valid SHA-1 out parameters
 */
function ogone_directlink_api_sha1_out_parameters() {
  return array('AAVADDRESS', 'AAVCHECK', 'AAVZIP', 'ACCEPTANCE', 'ALIAS', 'AMOUNT',
    'BIN', 'BRAND', 'CARDNO', 'CCCTY', 'CN', 'COMPLUS', 'CREATION_STATUS', 'CURRENCY', 'CVC',
    'CVCCHECK', 'DCC_COMMPERCENTAGE', 'DCC_CONVAMOUNT', 'DCC_CONVCCY', 'DCC_EXCHRATE',
    'DCC_EXCHRATESOURCE', 'DCC_EXCHRATETS', 'DCC_INDICATOR', 'DCC_MARGINPERCENTAGE',
    'DCC_VALIDHOURS', 'DIGESTCARDNO', 'ECI', 'ED', 'ENCCARDNO', 'IP', 'IPCTY',
    'NBREMAILUSAGE', 'NBRIPUSAGE', 'NBRIPUSAGE_ALLTX', 'NBRUSAGE', 'NCERROR', 'OPERATION',
    'ORDERID', 'PAYID', 'PM', 'PSPID', 'PSWD', 'SCO_CATEGORY', 'SCORING', 'STATUS', 'SUBSCRIPTION_ID',
    'TRXDATE', 'USERID', 'VC');
}