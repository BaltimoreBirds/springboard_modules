<?php
/**
 * @file
 * The Springboard Social module provides a level of integration with Facebook for donation forms.
 */
 
/**
 * Implements hook_init().
 */
function springboard_social_init() {
  if (arg(0) == 'node' && is_numeric(arg(1))) {
    // Load the node.
    $node = menu_get_object();
    // Add our CSS to the page if it's a donation form and share enabled.
    if (isset($node->type) && fundraiser_is_donation_type($node->type)) {
      if ($node->fb_share_status) {
        $path = drupal_get_path('module', 'springboard_social') . '/css/springboard_social_fb.css';
        drupal_add_css($path, 'module', 'all', FALSE);
      }
      if ($node->gplus_share_status) {
        $path = drupal_get_path('module', 'springboard_social') . '/css/springboard_social_gplus.css';
        drupal_add_css($path, 'module', 'all', FALSE);
      }
    }
  }
}

/**
 * Implements hook_menu().
 */
function springboard_social_menu() {
  $items = array();
  $items['admin/settings/springboard_social'] = array(
    'title' => 'Springboard Social',
    'description' => 'Configure Springboard integration with Facebook',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('springboard_social_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'springboard_social.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function springboard_social_theme() {
  return array(
    'springboard_social_fb_share_link' => array(
      'arguments' => array('app_id' => NULL, 'link_url' => NULL, 'title' => NULL, 'share_logo' => NULL, 'description' => NULL, 'message' => NULL),
      'template' => 'springboard-social-share-link',
    ),
    'springboard_social_gplus_share_link' => array(
      'arguments' => array('button_size' => NULL, 'annotation' => NULL, 'link_url' => NULL, 'image_url' => NULL, 'description' => NULL),
      'template' => 'springboard-social-gplus-link',
    ),
  );
}

/**
 * Implements hook_preprocess_fundraiser_confirmation().
 * 
 * Adds social networking variables to the confirmation template.
 */
function springboard_social_preprocess_fundraiser_confirmation(&$vars) {
  $app_id = variable_get('springboard_social_app_id', '');
  $node = node_load(arg(1));
  $vars['springboard_social_share'] = theme('springboard_social_fb_share_link',
          $app_id,
          $node->fb_share_link, 
          $node->fb_share_name,
          $node->fb_share_picture,
          $node->fb_share_description,
          $node->fb_share_message);
          
  $vars['springboard_social_share'] .= theme('springboard_social_gplus_share_link',
          variable_get('springboard_social_gplus_button_size', 'small'),
          variable_get('springboard_social_gplus_annotation', 'none'),
          $node->gplus_href,
          $node->gplus_image_url,
          $node->gplus_description);
          
  //drupal_set_message('vars:' . print_r($vars['springboard_social_gplus_button, TRUE));
}

/**
 * Implements hook_form_alter().
 */

function springboard_social_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'donation_form_node_form' && variable_get('springboard_social_share_display', 0)) {
    $fb_display = variable_get('springboard_social_share_display', 0);
    $gplus_display  = variable_get('springboard_social_gplus_display', 0);
    global $base_url;
    $form['fb_share'] = array(
      '#type' => 'fieldset',
      '#title' => t('Facebook Settings'),
      '#description' => t('Configure facebook share settings.'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );

    $form['fb_share']['fb_share_name'] = array(
      '#type' => 'textfield',
      '#title' => t('Name'),
      '#description' => t('This field controls the title text in the Facebook Share popup.'),
      '#default_value' => $form['#node']->fb_share_name ? $form['#node']->fb_share_name : variable_get('springboard_social_title', ''),
    );
    // If share links can be conditionally displayed
    if ($fb_display == 2) {
      $form['fb_share']['fb_share_status'] = array(
        '#type' => 'checkbox',
        '#title' => t('Display Facebook Share button on the thank you page.'),
        '#description' => t(''),
        '#default_value' =>  $form['#node']->fb_share_status,
      );
    }
    else {
      $form['fb_share']['fb_share_status'] = array(
         '#type' => 'value',
         '#value' => variable_get('springboard_social_share_display', 0),
      );
    }
    $form['fb_share']['fb_share_link'] = array(
      '#type' => 'textfield',
      '#title' => t('Share linkback URL'),
      '#description' => t(''),
      '#default_value' => ($form['#node']->fb_share_link ? $form['#node']->fb_share_link : $base_url . "/node/" . arg(1)),
    );
    $form['fb_share']['fb_share_picture'] = array(
      '#type' => 'textfield',
      '#title' => t('Share window logo'),
      '#description' => t('The URL of a logo you wish to display in the Facebook Share popup. If left blank this will default to the user profile picture.'),
      '#default_value' => $form['#node']->fb_share_picture ? $form['#node']->fb_share_picture : variable_get('springboard_social_logo', ''),
    );
    $form['fb_share']['fb_share_description'] = array(
      '#type' => 'textarea',
      '#title' => t('Share window description'),
      '#description' => t('This text is displayed in the body of the share post along with the logo and title.'),
      '#default_value' => $form['#node']->fb_share_description ? $form['#node']->fb_share_description : variable_get('springboard_social_description', ''),
    );
    $form['gplus_share'] = array(
      '#type' => 'fieldset',
      '#title' => t('Google Plus Settings'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );
    if ($gplus_display == 2) {
      $form['gplus_share']['gplus_share_status'] = array(
        '#type' => 'checkbox',
        '#title' => t('Display Google +1 button on the thank you page.'),
        '#description' => t(''),
        '#default_value' =>  $form['#node']->gplus_share_status,
      );
    }
   $form['gplus_share']['gplus_href'] = array(
     '#type' => 'textfield',
     '#title' => t('Target URL'),
     '#description' => t(''),
     '#default_value' => $form['#node']->gplus_href ? $form['#node']->gplus_href : $_SERVER['REQUEST_URI'],
   );
   $form['gplus_share']['gplus_image_url'] = array(
     '#type' => 'textfield',
     '#title' => t('Image URL'),
     '#description' => t(''),
     '#default_value' => $form['#node']->gplus_image_url ? $form['#node']->gplus_image_url : variable_get('springboard_social_gplus_image_url', ''),
   );
   $form['gplus_share']['gplus_description'] = array(
     '#type' => 'textfield',
     '#title' => t('Description'),
     '#description' => t(''),
     '#default_value' => $form['#node']->gplus_description ? $form['#node']->gplus_description : variable_get('springboard_social_gplus_description', ''),
   );
  }
  $form['#validate'][] = 'springboard_social_form_validate';
}

/**
 * Validation handler for Springboard Social fields.
 */
function springboard_social_form_validate(&$form, $form_state) {
  // enforce max length, name is stored as a varchar. There's also some Facebook limitation
  // to the maximum length of a wall post but I don't have a specific length yet.
  if ($form_state['values']['fb_share_name'] && strlen($form_state['values']['fb_share_name'] > 254)) {
    form_set_error('fb_share_name', t('The name field cannot be longer than 254 characters, you typed %length.', array('%length' => strlen($form_state['values']['fb_share_name']))));
  }
}

/**
 * Loads share settings for a particular node.
 * 
 * @param $nid
 * Int Node ID
 * 
 * @return
 * Returns an object containing the fb share link configuation.
 */
function springboard_social_load_share(&$node) {
  global $base_url;
  $share_status = variable_get('springboard_social_share_display', 0);
  $gplus_status = variable_get('springboard_social_gplus_display', 0);
  
  $share_settings = db_fetch_array(db_query('SELECT * FROM {springboard_social_share} WHERE nid = %d', $node->nid));
  $gplus_settings = db_fetch_array(db_query('SELECT * FROM {springboard_social_gplus} WHERE nid = %d', $node->nid));
 
  if ($share_settings['nid']) {
    $node->fb_share_status = $share_settings['status'];
    $node->fb_share_name = $share_settings['name'];
    $node->fb_share_link = $share_settings['link'];
    $node->fb_share_picture = $share_settings['picture'];
    $node->fb_share_description = $share_settings['description'];
    $node->fb_share_message = $share_settings['message'];
  }
  // No settings, try default config
  elseif ($share_status) {
    $node->fb_share_status = $share_status;
    $node->fb_share_name = variable_get('springboard_social_title', '');
    $node->fb_share_link = $base_url . "/node/" . $node->nid;
    $node->fb_share_picture = variable_get('springboard_social_logo', '');
    $node->fb_share_description = variable_get('springboard_social_message', '');
    $node->fb_share_message = variable_get('springboard_social_description', '');
  }
  
  if ($gplus_settings['nid']) {
    $node->gplus_share_status = $gplus_settings['status'];
    $node->gplus_href = $gplus_settings['href'];
    $node->gplus_image_url = $gplus_settings['image_url'];
    $node->gplus_description = $gplus_settings['description'];
    //drupal_set_message('node:' . print_r($node, TRUE));
  }
  elseif ($gplus_status) {
    $node->gplus_share_status = $gplus_status;
    $node->gplus_href = $base_url . "/node/" . $node->nid;
    $node->gplus_image_url = '';
    $node->gplus_description = '';
  } 
}

/**
 * Implements hook_nodeapi().
 */
function springboard_social_nodeapi(&$node, $op) {
  // This entire function only needs to fire for donation_forms. Anything else
  // should exit immediately.
  if ($node->type != 'donation_form') {
    return;
  }

  switch ($op) {
    case 'load':
      springboard_social_load_share($node);
      
      break;
    case 'insert':

      db_query("INSERT INTO {springboard_social_share} (nid, status, name, link, picture, description, message)
        VALUES (%d, %d, '%s', '%s', '%s', '%s', '%s')",
        $node->nid,
        $node->fb_share_status,
        $node->fb_share_name,
        $node->fb_share_link, 
        $node->fb_share_picture,
        $node->fb_share_description,
        $node->fb_share_message
      );
      db_query("INSERT INTO {springboard_social_gplus} (nid, status, href, image_url, description)
        VALUES (%d, %d, '%s', '%s', '%s')",
        $node->nid,
        $node->gplus_share_status,
        $node->gplus_href,
        $node->gplus_image_url,
        $node->gplus_description
      );
      break;
    case 'update':

      // Update or insert into springboard_social_share
      $entry_exists = db_result(db_query('SELECT 1 FROM {springboard_social_share} WHERE nid = %d', $node->nid));
      if ($entry_exists) {

        db_query("UPDATE {springboard_social_share} 
          SET status = %d, name = '%s', link = '%s', picture = '%s', description = '%s', message = '%s' 
          WHERE nid = %d", 
          $node->fb_share_status, 
          $node->fb_share_name, 
          $node->fb_share_link, 
          $node->fb_share_picture,
          $node->fb_share_description,
          $node->fb_share_message,
          $node->nid
        );
      }
      else {
        
        db_query("INSERT INTO {springboard_social_share} (nid, status, name, link, picture, description, message)
          VALUES (%d, %d, '%s', '%s', '%s', '%s', '%s')",
          $node->nid,
          $node->fb_share_status,
          $node->fb_share_name,
          $node->fb_share_link, 
          $node->fb_share_picture,
          $node->fb_share_description,
          $node->fb_share_message
        );
      }
      
  $entry_exists = db_result(db_query('SELECT 1 FROM {springboard_social_gplus} WHERE nid = %d', $node->nid));
      if ($entry_exists) {

        db_query("UPDATE {springboard_social_gplus} 
          SET status = %d, href = '%s', image_url = '%s', description = '%s' 
          WHERE nid = %d", 
          $node->gplus_share_status,
          $node->gplus_href,
          $node->gplus_image_url,
          $node->gplus_description,
          $node->nid
        );
      }
      else {
        
        db_query("INSERT INTO {springboard_social_gplus} (nid, status, href, image_url, description)
        VALUES (%d, %d, '%s', '%s', '%s')",
        $node->nid,
        $node->gplus_share_status,
        $node->gplus_href,
        $node->gplus_image_url,
        $node->gplus_description
      );
      }
      break;
    case 'delete':
      db_query('DELETE FROM {springboard_social_share} WHERE nid = %d', $node->nid);
      // delete from springboard_social_share
      break;
  }
}
